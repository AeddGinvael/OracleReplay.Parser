syntax = "proto3";
package google.protobuf;
option csharp_namespace = "Proto.Dota";

import "networkbasetypes.proto";

option optimize_for = SPEED;
option cc_generic_services = false;

enum EBaseUserMessages {
	UM_UKNOWN = 0;
	UM_AchievementEvent = 101;
	UM_CloseCaption = 102;
	UM_CloseCaptionDirect = 103;
	UM_CurrentTimescale = 104;
	UM_DesiredTimescale = 105;
	UM_Fade = 106;
	UM_GameTitle = 107;
	UM_HintText = 109;
	UM_HudMsg = 110;
	UM_HudText = 111;
	UM_KeyHintText = 112;
	UM_ColoredText = 113;
	UM_RequestState = 114;
	UM_ResetHUD = 115;
	UM_Rumble = 116;
	UM_SayText = 117;
	UM_SayText2 = 118;
	UM_SayTextChannel = 119;
	UM_Shake = 120;
	UM_ShakeDir = 121;
	UM_TextMsg = 124;
	UM_ScreenTilt = 125;
	UM_Train = 126;
	UM_VGUIMenu = 127;
	UM_VoiceMask = 128;
	UM_VoiceSubtitle = 129;
	UM_SendAudio = 130;
	UM_ItemPickup = 131;
	UM_AmmoDenied = 132;
	UM_CrosshairAngle = 133;
	UM_ShowMenu = 134;
	UM_CreditsMsg = 135;
	UM_CloseCaptionPlaceholder = 142;
	UM_CameraTransition = 143;
	UM_AudioParameter = 144;
	UM_ParticleManager = 145;
	UM_HudError = 146;
	UM_CustomGameEvent = 148;
	UM_HandHapticPulse = 149;
	UM_AnimGraphUpdate = 150;
	UM_HandHapticPulsePrecise = 151;
	UM_MAX_BASE = 200;
}

enum EBaseEntityMessages {
	EM_UKNOWN = 0;
	EM_PlayJingle = 136;
	EM_ScreenOverlay = 137;
	EM_RemoveAllDecals = 138;
	EM_PropagateForce = 139;
	EM_DoSpark = 140;
	EM_FixAngle = 141;
}

enum EHapticPulseType {
	VR_HAND_HAPTIC_PULSE_LIGHT = 0;
	VR_HAND_HAPTIC_PULSE_MEDIUM = 1;
	VR_HAND_HAPTIC_PULSE_STRONG = 2;
}

message CUserMessageSayText2 {
	  uint32 entityindex = 1;
	  bool chat = 2;
	  string messagename = 3;
	  string param1 = 4;
	  string param2 = 5;
	  string param3 = 6;
	  string param4 = 7;
}

message CUserMessageTextMsg {
	  uint32 dest = 1;
	repeated string param = 2;
}

message CUserMessageResetHUD {
}

message CUserMessageSendAudio {
	  string soundname = 1;
	  bool stop = 2;
}

message CUserMessageVoiceMask {
	repeated uint32 gamerules_masks = 1;
	repeated uint32 ban_masks = 2;
	  bool mod_enable = 3;
}

message CEntityMessagePlayJingle {
}

message CUserMessageHapticPulse {
	  int32 hand_id = 1;
	  EHapticPulseType pulse_type = 2 ;
}

message CEntityMessageScreenOverlay {
	  bool start_effect = 1;
}

message CEntityMessageRemoveAllDecals {
	  bool remove_decals = 1;
}

message CEntityMessagePropagateForce {
	  CMsgVector impulse = 1;
}

message CEntityMessageDoSpark {
	  CMsgVector origin = 1;
	  uint32 entityindex = 2;
	  float radius = 3;
	  fixed32 color = 4;
	  uint32 beams = 5;
	  float thick = 6;
	  float duration = 7;
}

message CEntityMessageFixAngle {
	  bool relative = 1;
	  CMsgQAngle angle = 2;
}

message CUserMsg_HudError {
	  int32 order_id = 1;
}

message CUserMsg_CustomGameEvent_ClientToServer {
	  string event_name = 1;
	  bytes data = 2;
}

message CUserMsg_CustomGameEvent_ServerToClient {
	  string event_name = 1;
	  bytes data = 2;
}

message CUserMsg_TrackedControllerInput_ClientToServer {
	  bytes data = 1;
}

