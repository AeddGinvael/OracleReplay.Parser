// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: s2_gameevents.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Proto.Dota {

  /// <summary>Holder for reflection information generated from s2_gameevents.proto</summary>
  public static partial class S2GameeventsReflection {

    #region Descriptor
    /// <summary>File descriptor for s2_gameevents.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static S2GameeventsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChNzMl9nYW1lZXZlbnRzLnByb3RvEg9nb29nbGUucHJvdG9idWYijAIKHkNN",
            "c2dTb3VyY2UxTGVnYWN5R2FtZUV2ZW50TGlzdBJRCgtkZXNjcmlwdG9ycxgB",
            "IAMoCzI8Lmdvb2dsZS5wcm90b2J1Zi5DTXNnU291cmNlMUxlZ2FjeUdhbWVF",
            "dmVudExpc3QuZGVzY3JpcHRvcl90GiMKBWtleV90EgwKBHR5cGUYASABKAUS",
            "DAoEbmFtZRgCIAEoCRpyCgxkZXNjcmlwdG9yX3QSDwoHZXZlbnRpZBgBIAEo",
            "BRIMCgRuYW1lGAIgASgJEkMKBGtleXMYAyADKAsyNS5nb29nbGUucHJvdG9i",
            "dWYuQ01zZ1NvdXJjZTFMZWdhY3lHYW1lRXZlbnRMaXN0LmtleV90IksKHUNN",
            "c2dTb3VyY2UxTGVnYWN5TGlzdGVuRXZlbnRzEhIKCnBsYXllcnNsb3QYASAB",
            "KAUSFgoOZXZlbnRhcnJheWJpdHMYAiADKA0ingIKGkNNc2dTb3VyY2UxTGVn",
            "YWN5R2FtZUV2ZW50EhIKCmV2ZW50X25hbWUYASABKAkSDwoHZXZlbnRpZBgC",
            "IAEoBRI/CgRrZXlzGAMgAygLMjEuZ29vZ2xlLnByb3RvYnVmLkNNc2dTb3Vy",
            "Y2UxTGVnYWN5R2FtZUV2ZW50LmtleV90GpkBCgVrZXlfdBIMCgR0eXBlGAEg",
            "ASgFEhIKCnZhbF9zdHJpbmcYAiABKAkSEQoJdmFsX2Zsb2F0GAMgASgCEhAK",
            "CHZhbF9sb25nGAQgASgFEhEKCXZhbF9zaG9ydBgFIAEoBRIQCgh2YWxfYnl0",
            "ZRgGIAEoBRIQCgh2YWxfYm9vbBgHIAEoCBISCgp2YWxfdWludDY0GAggASgE",
            "IqABChZDTXNnU29zU3RhcnRTb3VuZEV2ZW50EhcKD3NvdW5kZXZlbnRfZ3Vp",
            "ZBgBIAEoBRIXCg9zb3VuZGV2ZW50X2hhc2gYAiABKAcSGwoTc291cmNlX2Vu",
            "dGl0eV9pbmRleBgDIAEoBRIMCgRzZWVkGAQgASgFEhUKDXBhY2tlZF9wYXJh",
            "bXMYBSABKAwSEgoKc3RhcnRfdGltZRgGIAEoAiIwChVDTXNnU29zU3RvcFNv",
            "dW5kRXZlbnQSFwoPc291bmRldmVudF9ndWlkGAEgASgFIlEKGUNNc2dTb3NT",
            "dG9wU291bmRFdmVudEhhc2gSFwoPc291bmRldmVudF9oYXNoGAEgASgHEhsK",
            "E3NvdXJjZV9lbnRpdHlfaW5kZXgYAiABKAUiTAoaQ01zZ1Nvc1NldFNvdW5k",
            "RXZlbnRQYXJhbXMSFwoPc291bmRldmVudF9ndWlkGAEgASgFEhUKDXBhY2tl",
            "ZF9wYXJhbXMYBSABKAwqxgMKD0VCYXNlR2FtZUV2ZW50cxINCglHRV9VS05P",
            "V04QABIgChtHRV9WRGVidWdHYW1lU2Vzc2lvbklERXZlbnQQyAESFwoSR0Vf",
            "UGxhY2VEZWNhbEV2ZW50EMkBEh0KGEdFX0NsZWFyV29ybGREZWNhbHNFdmVu",
            "dBDKARIeChlHRV9DbGVhckVudGl0eURlY2Fsc0V2ZW50EMsBEisKJkdFX0Ns",
            "ZWFyRGVjYWxzRm9yU2tlbGV0b25JbnN0YW5jZUV2ZW50EMwBEiIKHUdFX1Nv",
            "dXJjZTFMZWdhY3lHYW1lRXZlbnRMaXN0EM0BEiEKHEdFX1NvdXJjZTFMZWdh",
            "Y3lMaXN0ZW5FdmVudHMQzgESHgoZR0VfU291cmNlMUxlZ2FjeUdhbWVFdmVu",
            "dBDPARIaChVHRV9Tb3NTdGFydFNvdW5kRXZlbnQQ0AESGQoUR0VfU29zU3Rv",
            "cFNvdW5kRXZlbnQQ0QESHgoZR0VfU29zU2V0U291bmRFdmVudFBhcmFtcxDS",
            "ARIgChtHRV9Tb3NTZXRMaWJyYXJ5U3RhY2tGaWVsZHMQ0wESHQoYR0VfU29z",
            "U3RvcFNvdW5kRXZlbnRIYXNoENQBQhJIAYABAKoCClByb3RvLkRvdGFiBnBy",
            "b3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Proto.Dota.EBaseGameEvents), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.Dota.CMsgSource1LegacyGameEventList), global::Proto.Dota.CMsgSource1LegacyGameEventList.Parser, new[]{ "Descriptors" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Proto.Dota.CMsgSource1LegacyGameEventList.Types.key_t), global::Proto.Dota.CMsgSource1LegacyGameEventList.Types.key_t.Parser, new[]{ "Type", "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.Dota.CMsgSource1LegacyGameEventList.Types.descriptor_t), global::Proto.Dota.CMsgSource1LegacyGameEventList.Types.descriptor_t.Parser, new[]{ "Eventid", "Name", "Keys" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.Dota.CMsgSource1LegacyListenEvents), global::Proto.Dota.CMsgSource1LegacyListenEvents.Parser, new[]{ "Playerslot", "Eventarraybits" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.Dota.CMsgSource1LegacyGameEvent), global::Proto.Dota.CMsgSource1LegacyGameEvent.Parser, new[]{ "EventName", "Eventid", "Keys" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Proto.Dota.CMsgSource1LegacyGameEvent.Types.key_t), global::Proto.Dota.CMsgSource1LegacyGameEvent.Types.key_t.Parser, new[]{ "Type", "ValString", "ValFloat", "ValLong", "ValShort", "ValByte", "ValBool", "ValUint64" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.Dota.CMsgSosStartSoundEvent), global::Proto.Dota.CMsgSosStartSoundEvent.Parser, new[]{ "SoundeventGuid", "SoundeventHash", "SourceEntityIndex", "Seed", "PackedParams", "StartTime" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.Dota.CMsgSosStopSoundEvent), global::Proto.Dota.CMsgSosStopSoundEvent.Parser, new[]{ "SoundeventGuid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.Dota.CMsgSosStopSoundEventHash), global::Proto.Dota.CMsgSosStopSoundEventHash.Parser, new[]{ "SoundeventHash", "SourceEntityIndex" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.Dota.CMsgSosSetSoundEventParams), global::Proto.Dota.CMsgSosSetSoundEventParams.Parser, new[]{ "SoundeventGuid", "PackedParams" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum EBaseGameEvents {
    [pbr::OriginalName("GE_UKNOWN")] GeUknown = 0,
    [pbr::OriginalName("GE_VDebugGameSessionIDEvent")] GeVdebugGameSessionIdevent = 200,
    [pbr::OriginalName("GE_PlaceDecalEvent")] GePlaceDecalEvent = 201,
    [pbr::OriginalName("GE_ClearWorldDecalsEvent")] GeClearWorldDecalsEvent = 202,
    [pbr::OriginalName("GE_ClearEntityDecalsEvent")] GeClearEntityDecalsEvent = 203,
    [pbr::OriginalName("GE_ClearDecalsForSkeletonInstanceEvent")] GeClearDecalsForSkeletonInstanceEvent = 204,
    [pbr::OriginalName("GE_Source1LegacyGameEventList")] GeSource1LegacyGameEventList = 205,
    [pbr::OriginalName("GE_Source1LegacyListenEvents")] GeSource1LegacyListenEvents = 206,
    [pbr::OriginalName("GE_Source1LegacyGameEvent")] GeSource1LegacyGameEvent = 207,
    [pbr::OriginalName("GE_SosStartSoundEvent")] GeSosStartSoundEvent = 208,
    [pbr::OriginalName("GE_SosStopSoundEvent")] GeSosStopSoundEvent = 209,
    [pbr::OriginalName("GE_SosSetSoundEventParams")] GeSosSetSoundEventParams = 210,
    [pbr::OriginalName("GE_SosSetLibraryStackFields")] GeSosSetLibraryStackFields = 211,
    [pbr::OriginalName("GE_SosStopSoundEventHash")] GeSosStopSoundEventHash = 212,
  }

  #endregion

  #region Messages
  public sealed partial class CMsgSource1LegacyGameEventList : pb::IMessage<CMsgSource1LegacyGameEventList> {
    private static readonly pb::MessageParser<CMsgSource1LegacyGameEventList> _parser = new pb::MessageParser<CMsgSource1LegacyGameEventList>(() => new CMsgSource1LegacyGameEventList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CMsgSource1LegacyGameEventList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.Dota.S2GameeventsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgSource1LegacyGameEventList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgSource1LegacyGameEventList(CMsgSource1LegacyGameEventList other) : this() {
      descriptors_ = other.descriptors_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgSource1LegacyGameEventList Clone() {
      return new CMsgSource1LegacyGameEventList(this);
    }

    /// <summary>Field number for the "descriptors" field.</summary>
    public const int DescriptorsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Proto.Dota.CMsgSource1LegacyGameEventList.Types.descriptor_t> _repeated_descriptors_codec
        = pb::FieldCodec.ForMessage(10, global::Proto.Dota.CMsgSource1LegacyGameEventList.Types.descriptor_t.Parser);
    private readonly pbc::RepeatedField<global::Proto.Dota.CMsgSource1LegacyGameEventList.Types.descriptor_t> descriptors_ = new pbc::RepeatedField<global::Proto.Dota.CMsgSource1LegacyGameEventList.Types.descriptor_t>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Proto.Dota.CMsgSource1LegacyGameEventList.Types.descriptor_t> Descriptors {
      get { return descriptors_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CMsgSource1LegacyGameEventList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CMsgSource1LegacyGameEventList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!descriptors_.Equals(other.descriptors_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= descriptors_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      descriptors_.WriteTo(output, _repeated_descriptors_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += descriptors_.CalculateSize(_repeated_descriptors_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CMsgSource1LegacyGameEventList other) {
      if (other == null) {
        return;
      }
      descriptors_.Add(other.descriptors_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            descriptors_.AddEntriesFrom(input, _repeated_descriptors_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the CMsgSource1LegacyGameEventList message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class key_t : pb::IMessage<key_t> {
        private static readonly pb::MessageParser<key_t> _parser = new pb::MessageParser<key_t>(() => new key_t());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<key_t> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Proto.Dota.CMsgSource1LegacyGameEventList.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public key_t() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public key_t(key_t other) : this() {
          type_ = other.type_;
          name_ = other.name_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public key_t Clone() {
          return new key_t(this);
        }

        /// <summary>Field number for the "type" field.</summary>
        public const int TypeFieldNumber = 1;
        private int type_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Type {
          get { return type_; }
          set {
            type_ = value;
          }
        }

        /// <summary>Field number for the "name" field.</summary>
        public const int NameFieldNumber = 2;
        private string name_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Name {
          get { return name_; }
          set {
            name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as key_t);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(key_t other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Type != other.Type) return false;
          if (Name != other.Name) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Type != 0) hash ^= Type.GetHashCode();
          if (Name.Length != 0) hash ^= Name.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Type != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(Type);
          }
          if (Name.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Name);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Type != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
          }
          if (Name.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(key_t other) {
          if (other == null) {
            return;
          }
          if (other.Type != 0) {
            Type = other.Type;
          }
          if (other.Name.Length != 0) {
            Name = other.Name;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Type = input.ReadInt32();
                break;
              }
              case 18: {
                Name = input.ReadString();
                break;
              }
            }
          }
        }

      }

      public sealed partial class descriptor_t : pb::IMessage<descriptor_t> {
        private static readonly pb::MessageParser<descriptor_t> _parser = new pb::MessageParser<descriptor_t>(() => new descriptor_t());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<descriptor_t> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Proto.Dota.CMsgSource1LegacyGameEventList.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public descriptor_t() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public descriptor_t(descriptor_t other) : this() {
          eventid_ = other.eventid_;
          name_ = other.name_;
          keys_ = other.keys_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public descriptor_t Clone() {
          return new descriptor_t(this);
        }

        /// <summary>Field number for the "eventid" field.</summary>
        public const int EventidFieldNumber = 1;
        private int eventid_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Eventid {
          get { return eventid_; }
          set {
            eventid_ = value;
          }
        }

        /// <summary>Field number for the "name" field.</summary>
        public const int NameFieldNumber = 2;
        private string name_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Name {
          get { return name_; }
          set {
            name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "keys" field.</summary>
        public const int KeysFieldNumber = 3;
        private static readonly pb::FieldCodec<global::Proto.Dota.CMsgSource1LegacyGameEventList.Types.key_t> _repeated_keys_codec
            = pb::FieldCodec.ForMessage(26, global::Proto.Dota.CMsgSource1LegacyGameEventList.Types.key_t.Parser);
        private readonly pbc::RepeatedField<global::Proto.Dota.CMsgSource1LegacyGameEventList.Types.key_t> keys_ = new pbc::RepeatedField<global::Proto.Dota.CMsgSource1LegacyGameEventList.Types.key_t>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Proto.Dota.CMsgSource1LegacyGameEventList.Types.key_t> Keys {
          get { return keys_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as descriptor_t);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(descriptor_t other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Eventid != other.Eventid) return false;
          if (Name != other.Name) return false;
          if(!keys_.Equals(other.keys_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Eventid != 0) hash ^= Eventid.GetHashCode();
          if (Name.Length != 0) hash ^= Name.GetHashCode();
          hash ^= keys_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Eventid != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(Eventid);
          }
          if (Name.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Name);
          }
          keys_.WriteTo(output, _repeated_keys_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Eventid != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Eventid);
          }
          if (Name.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
          }
          size += keys_.CalculateSize(_repeated_keys_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(descriptor_t other) {
          if (other == null) {
            return;
          }
          if (other.Eventid != 0) {
            Eventid = other.Eventid;
          }
          if (other.Name.Length != 0) {
            Name = other.Name;
          }
          keys_.Add(other.keys_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Eventid = input.ReadInt32();
                break;
              }
              case 18: {
                Name = input.ReadString();
                break;
              }
              case 26: {
                keys_.AddEntriesFrom(input, _repeated_keys_codec);
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class CMsgSource1LegacyListenEvents : pb::IMessage<CMsgSource1LegacyListenEvents> {
    private static readonly pb::MessageParser<CMsgSource1LegacyListenEvents> _parser = new pb::MessageParser<CMsgSource1LegacyListenEvents>(() => new CMsgSource1LegacyListenEvents());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CMsgSource1LegacyListenEvents> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.Dota.S2GameeventsReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgSource1LegacyListenEvents() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgSource1LegacyListenEvents(CMsgSource1LegacyListenEvents other) : this() {
      playerslot_ = other.playerslot_;
      eventarraybits_ = other.eventarraybits_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgSource1LegacyListenEvents Clone() {
      return new CMsgSource1LegacyListenEvents(this);
    }

    /// <summary>Field number for the "playerslot" field.</summary>
    public const int PlayerslotFieldNumber = 1;
    private int playerslot_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Playerslot {
      get { return playerslot_; }
      set {
        playerslot_ = value;
      }
    }

    /// <summary>Field number for the "eventarraybits" field.</summary>
    public const int EventarraybitsFieldNumber = 2;
    private static readonly pb::FieldCodec<uint> _repeated_eventarraybits_codec
        = pb::FieldCodec.ForUInt32(18);
    private readonly pbc::RepeatedField<uint> eventarraybits_ = new pbc::RepeatedField<uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<uint> Eventarraybits {
      get { return eventarraybits_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CMsgSource1LegacyListenEvents);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CMsgSource1LegacyListenEvents other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Playerslot != other.Playerslot) return false;
      if(!eventarraybits_.Equals(other.eventarraybits_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Playerslot != 0) hash ^= Playerslot.GetHashCode();
      hash ^= eventarraybits_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Playerslot != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Playerslot);
      }
      eventarraybits_.WriteTo(output, _repeated_eventarraybits_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Playerslot != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Playerslot);
      }
      size += eventarraybits_.CalculateSize(_repeated_eventarraybits_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CMsgSource1LegacyListenEvents other) {
      if (other == null) {
        return;
      }
      if (other.Playerslot != 0) {
        Playerslot = other.Playerslot;
      }
      eventarraybits_.Add(other.eventarraybits_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Playerslot = input.ReadInt32();
            break;
          }
          case 18:
          case 16: {
            eventarraybits_.AddEntriesFrom(input, _repeated_eventarraybits_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CMsgSource1LegacyGameEvent : pb::IMessage<CMsgSource1LegacyGameEvent> {
    private static readonly pb::MessageParser<CMsgSource1LegacyGameEvent> _parser = new pb::MessageParser<CMsgSource1LegacyGameEvent>(() => new CMsgSource1LegacyGameEvent());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CMsgSource1LegacyGameEvent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.Dota.S2GameeventsReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgSource1LegacyGameEvent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgSource1LegacyGameEvent(CMsgSource1LegacyGameEvent other) : this() {
      eventName_ = other.eventName_;
      eventid_ = other.eventid_;
      keys_ = other.keys_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgSource1LegacyGameEvent Clone() {
      return new CMsgSource1LegacyGameEvent(this);
    }

    /// <summary>Field number for the "event_name" field.</summary>
    public const int EventNameFieldNumber = 1;
    private string eventName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EventName {
      get { return eventName_; }
      set {
        eventName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "eventid" field.</summary>
    public const int EventidFieldNumber = 2;
    private int eventid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Eventid {
      get { return eventid_; }
      set {
        eventid_ = value;
      }
    }

    /// <summary>Field number for the "keys" field.</summary>
    public const int KeysFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Proto.Dota.CMsgSource1LegacyGameEvent.Types.key_t> _repeated_keys_codec
        = pb::FieldCodec.ForMessage(26, global::Proto.Dota.CMsgSource1LegacyGameEvent.Types.key_t.Parser);
    private readonly pbc::RepeatedField<global::Proto.Dota.CMsgSource1LegacyGameEvent.Types.key_t> keys_ = new pbc::RepeatedField<global::Proto.Dota.CMsgSource1LegacyGameEvent.Types.key_t>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Proto.Dota.CMsgSource1LegacyGameEvent.Types.key_t> Keys {
      get { return keys_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CMsgSource1LegacyGameEvent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CMsgSource1LegacyGameEvent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (EventName != other.EventName) return false;
      if (Eventid != other.Eventid) return false;
      if(!keys_.Equals(other.keys_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (EventName.Length != 0) hash ^= EventName.GetHashCode();
      if (Eventid != 0) hash ^= Eventid.GetHashCode();
      hash ^= keys_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (EventName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(EventName);
      }
      if (Eventid != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Eventid);
      }
      keys_.WriteTo(output, _repeated_keys_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (EventName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EventName);
      }
      if (Eventid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Eventid);
      }
      size += keys_.CalculateSize(_repeated_keys_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CMsgSource1LegacyGameEvent other) {
      if (other == null) {
        return;
      }
      if (other.EventName.Length != 0) {
        EventName = other.EventName;
      }
      if (other.Eventid != 0) {
        Eventid = other.Eventid;
      }
      keys_.Add(other.keys_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            EventName = input.ReadString();
            break;
          }
          case 16: {
            Eventid = input.ReadInt32();
            break;
          }
          case 26: {
            keys_.AddEntriesFrom(input, _repeated_keys_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the CMsgSource1LegacyGameEvent message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class key_t : pb::IMessage<key_t> {
        private static readonly pb::MessageParser<key_t> _parser = new pb::MessageParser<key_t>(() => new key_t());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<key_t> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Proto.Dota.CMsgSource1LegacyGameEvent.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public key_t() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public key_t(key_t other) : this() {
          type_ = other.type_;
          valString_ = other.valString_;
          valFloat_ = other.valFloat_;
          valLong_ = other.valLong_;
          valShort_ = other.valShort_;
          valByte_ = other.valByte_;
          valBool_ = other.valBool_;
          valUint64_ = other.valUint64_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public key_t Clone() {
          return new key_t(this);
        }

        /// <summary>Field number for the "type" field.</summary>
        public const int TypeFieldNumber = 1;
        private int type_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Type {
          get { return type_; }
          set {
            type_ = value;
          }
        }

        /// <summary>Field number for the "val_string" field.</summary>
        public const int ValStringFieldNumber = 2;
        private string valString_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string ValString {
          get { return valString_; }
          set {
            valString_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "val_float" field.</summary>
        public const int ValFloatFieldNumber = 3;
        private float valFloat_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public float ValFloat {
          get { return valFloat_; }
          set {
            valFloat_ = value;
          }
        }

        /// <summary>Field number for the "val_long" field.</summary>
        public const int ValLongFieldNumber = 4;
        private int valLong_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int ValLong {
          get { return valLong_; }
          set {
            valLong_ = value;
          }
        }

        /// <summary>Field number for the "val_short" field.</summary>
        public const int ValShortFieldNumber = 5;
        private int valShort_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int ValShort {
          get { return valShort_; }
          set {
            valShort_ = value;
          }
        }

        /// <summary>Field number for the "val_byte" field.</summary>
        public const int ValByteFieldNumber = 6;
        private int valByte_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int ValByte {
          get { return valByte_; }
          set {
            valByte_ = value;
          }
        }

        /// <summary>Field number for the "val_bool" field.</summary>
        public const int ValBoolFieldNumber = 7;
        private bool valBool_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool ValBool {
          get { return valBool_; }
          set {
            valBool_ = value;
          }
        }

        /// <summary>Field number for the "val_uint64" field.</summary>
        public const int ValUint64FieldNumber = 8;
        private ulong valUint64_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ulong ValUint64 {
          get { return valUint64_; }
          set {
            valUint64_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as key_t);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(key_t other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Type != other.Type) return false;
          if (ValString != other.ValString) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(ValFloat, other.ValFloat)) return false;
          if (ValLong != other.ValLong) return false;
          if (ValShort != other.ValShort) return false;
          if (ValByte != other.ValByte) return false;
          if (ValBool != other.ValBool) return false;
          if (ValUint64 != other.ValUint64) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Type != 0) hash ^= Type.GetHashCode();
          if (ValString.Length != 0) hash ^= ValString.GetHashCode();
          if (ValFloat != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(ValFloat);
          if (ValLong != 0) hash ^= ValLong.GetHashCode();
          if (ValShort != 0) hash ^= ValShort.GetHashCode();
          if (ValByte != 0) hash ^= ValByte.GetHashCode();
          if (ValBool != false) hash ^= ValBool.GetHashCode();
          if (ValUint64 != 0UL) hash ^= ValUint64.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Type != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(Type);
          }
          if (ValString.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(ValString);
          }
          if (ValFloat != 0F) {
            output.WriteRawTag(29);
            output.WriteFloat(ValFloat);
          }
          if (ValLong != 0) {
            output.WriteRawTag(32);
            output.WriteInt32(ValLong);
          }
          if (ValShort != 0) {
            output.WriteRawTag(40);
            output.WriteInt32(ValShort);
          }
          if (ValByte != 0) {
            output.WriteRawTag(48);
            output.WriteInt32(ValByte);
          }
          if (ValBool != false) {
            output.WriteRawTag(56);
            output.WriteBool(ValBool);
          }
          if (ValUint64 != 0UL) {
            output.WriteRawTag(64);
            output.WriteUInt64(ValUint64);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Type != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
          }
          if (ValString.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(ValString);
          }
          if (ValFloat != 0F) {
            size += 1 + 4;
          }
          if (ValLong != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(ValLong);
          }
          if (ValShort != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(ValShort);
          }
          if (ValByte != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(ValByte);
          }
          if (ValBool != false) {
            size += 1 + 1;
          }
          if (ValUint64 != 0UL) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ValUint64);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(key_t other) {
          if (other == null) {
            return;
          }
          if (other.Type != 0) {
            Type = other.Type;
          }
          if (other.ValString.Length != 0) {
            ValString = other.ValString;
          }
          if (other.ValFloat != 0F) {
            ValFloat = other.ValFloat;
          }
          if (other.ValLong != 0) {
            ValLong = other.ValLong;
          }
          if (other.ValShort != 0) {
            ValShort = other.ValShort;
          }
          if (other.ValByte != 0) {
            ValByte = other.ValByte;
          }
          if (other.ValBool != false) {
            ValBool = other.ValBool;
          }
          if (other.ValUint64 != 0UL) {
            ValUint64 = other.ValUint64;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Type = input.ReadInt32();
                break;
              }
              case 18: {
                ValString = input.ReadString();
                break;
              }
              case 29: {
                ValFloat = input.ReadFloat();
                break;
              }
              case 32: {
                ValLong = input.ReadInt32();
                break;
              }
              case 40: {
                ValShort = input.ReadInt32();
                break;
              }
              case 48: {
                ValByte = input.ReadInt32();
                break;
              }
              case 56: {
                ValBool = input.ReadBool();
                break;
              }
              case 64: {
                ValUint64 = input.ReadUInt64();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class CMsgSosStartSoundEvent : pb::IMessage<CMsgSosStartSoundEvent> {
    private static readonly pb::MessageParser<CMsgSosStartSoundEvent> _parser = new pb::MessageParser<CMsgSosStartSoundEvent>(() => new CMsgSosStartSoundEvent());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CMsgSosStartSoundEvent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.Dota.S2GameeventsReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgSosStartSoundEvent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgSosStartSoundEvent(CMsgSosStartSoundEvent other) : this() {
      soundeventGuid_ = other.soundeventGuid_;
      soundeventHash_ = other.soundeventHash_;
      sourceEntityIndex_ = other.sourceEntityIndex_;
      seed_ = other.seed_;
      packedParams_ = other.packedParams_;
      startTime_ = other.startTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgSosStartSoundEvent Clone() {
      return new CMsgSosStartSoundEvent(this);
    }

    /// <summary>Field number for the "soundevent_guid" field.</summary>
    public const int SoundeventGuidFieldNumber = 1;
    private int soundeventGuid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SoundeventGuid {
      get { return soundeventGuid_; }
      set {
        soundeventGuid_ = value;
      }
    }

    /// <summary>Field number for the "soundevent_hash" field.</summary>
    public const int SoundeventHashFieldNumber = 2;
    private uint soundeventHash_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint SoundeventHash {
      get { return soundeventHash_; }
      set {
        soundeventHash_ = value;
      }
    }

    /// <summary>Field number for the "source_entity_index" field.</summary>
    public const int SourceEntityIndexFieldNumber = 3;
    private int sourceEntityIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SourceEntityIndex {
      get { return sourceEntityIndex_; }
      set {
        sourceEntityIndex_ = value;
      }
    }

    /// <summary>Field number for the "seed" field.</summary>
    public const int SeedFieldNumber = 4;
    private int seed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Seed {
      get { return seed_; }
      set {
        seed_ = value;
      }
    }

    /// <summary>Field number for the "packed_params" field.</summary>
    public const int PackedParamsFieldNumber = 5;
    private pb::ByteString packedParams_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString PackedParams {
      get { return packedParams_; }
      set {
        packedParams_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "start_time" field.</summary>
    public const int StartTimeFieldNumber = 6;
    private float startTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float StartTime {
      get { return startTime_; }
      set {
        startTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CMsgSosStartSoundEvent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CMsgSosStartSoundEvent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SoundeventGuid != other.SoundeventGuid) return false;
      if (SoundeventHash != other.SoundeventHash) return false;
      if (SourceEntityIndex != other.SourceEntityIndex) return false;
      if (Seed != other.Seed) return false;
      if (PackedParams != other.PackedParams) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(StartTime, other.StartTime)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SoundeventGuid != 0) hash ^= SoundeventGuid.GetHashCode();
      if (SoundeventHash != 0) hash ^= SoundeventHash.GetHashCode();
      if (SourceEntityIndex != 0) hash ^= SourceEntityIndex.GetHashCode();
      if (Seed != 0) hash ^= Seed.GetHashCode();
      if (PackedParams.Length != 0) hash ^= PackedParams.GetHashCode();
      if (StartTime != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(StartTime);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SoundeventGuid != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(SoundeventGuid);
      }
      if (SoundeventHash != 0) {
        output.WriteRawTag(21);
        output.WriteFixed32(SoundeventHash);
      }
      if (SourceEntityIndex != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(SourceEntityIndex);
      }
      if (Seed != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Seed);
      }
      if (PackedParams.Length != 0) {
        output.WriteRawTag(42);
        output.WriteBytes(PackedParams);
      }
      if (StartTime != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(StartTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SoundeventGuid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SoundeventGuid);
      }
      if (SoundeventHash != 0) {
        size += 1 + 4;
      }
      if (SourceEntityIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SourceEntityIndex);
      }
      if (Seed != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Seed);
      }
      if (PackedParams.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(PackedParams);
      }
      if (StartTime != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CMsgSosStartSoundEvent other) {
      if (other == null) {
        return;
      }
      if (other.SoundeventGuid != 0) {
        SoundeventGuid = other.SoundeventGuid;
      }
      if (other.SoundeventHash != 0) {
        SoundeventHash = other.SoundeventHash;
      }
      if (other.SourceEntityIndex != 0) {
        SourceEntityIndex = other.SourceEntityIndex;
      }
      if (other.Seed != 0) {
        Seed = other.Seed;
      }
      if (other.PackedParams.Length != 0) {
        PackedParams = other.PackedParams;
      }
      if (other.StartTime != 0F) {
        StartTime = other.StartTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            SoundeventGuid = input.ReadInt32();
            break;
          }
          case 21: {
            SoundeventHash = input.ReadFixed32();
            break;
          }
          case 24: {
            SourceEntityIndex = input.ReadInt32();
            break;
          }
          case 32: {
            Seed = input.ReadInt32();
            break;
          }
          case 42: {
            PackedParams = input.ReadBytes();
            break;
          }
          case 53: {
            StartTime = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CMsgSosStopSoundEvent : pb::IMessage<CMsgSosStopSoundEvent> {
    private static readonly pb::MessageParser<CMsgSosStopSoundEvent> _parser = new pb::MessageParser<CMsgSosStopSoundEvent>(() => new CMsgSosStopSoundEvent());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CMsgSosStopSoundEvent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.Dota.S2GameeventsReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgSosStopSoundEvent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgSosStopSoundEvent(CMsgSosStopSoundEvent other) : this() {
      soundeventGuid_ = other.soundeventGuid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgSosStopSoundEvent Clone() {
      return new CMsgSosStopSoundEvent(this);
    }

    /// <summary>Field number for the "soundevent_guid" field.</summary>
    public const int SoundeventGuidFieldNumber = 1;
    private int soundeventGuid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SoundeventGuid {
      get { return soundeventGuid_; }
      set {
        soundeventGuid_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CMsgSosStopSoundEvent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CMsgSosStopSoundEvent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SoundeventGuid != other.SoundeventGuid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SoundeventGuid != 0) hash ^= SoundeventGuid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SoundeventGuid != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(SoundeventGuid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SoundeventGuid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SoundeventGuid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CMsgSosStopSoundEvent other) {
      if (other == null) {
        return;
      }
      if (other.SoundeventGuid != 0) {
        SoundeventGuid = other.SoundeventGuid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            SoundeventGuid = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CMsgSosStopSoundEventHash : pb::IMessage<CMsgSosStopSoundEventHash> {
    private static readonly pb::MessageParser<CMsgSosStopSoundEventHash> _parser = new pb::MessageParser<CMsgSosStopSoundEventHash>(() => new CMsgSosStopSoundEventHash());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CMsgSosStopSoundEventHash> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.Dota.S2GameeventsReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgSosStopSoundEventHash() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgSosStopSoundEventHash(CMsgSosStopSoundEventHash other) : this() {
      soundeventHash_ = other.soundeventHash_;
      sourceEntityIndex_ = other.sourceEntityIndex_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgSosStopSoundEventHash Clone() {
      return new CMsgSosStopSoundEventHash(this);
    }

    /// <summary>Field number for the "soundevent_hash" field.</summary>
    public const int SoundeventHashFieldNumber = 1;
    private uint soundeventHash_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint SoundeventHash {
      get { return soundeventHash_; }
      set {
        soundeventHash_ = value;
      }
    }

    /// <summary>Field number for the "source_entity_index" field.</summary>
    public const int SourceEntityIndexFieldNumber = 2;
    private int sourceEntityIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SourceEntityIndex {
      get { return sourceEntityIndex_; }
      set {
        sourceEntityIndex_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CMsgSosStopSoundEventHash);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CMsgSosStopSoundEventHash other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SoundeventHash != other.SoundeventHash) return false;
      if (SourceEntityIndex != other.SourceEntityIndex) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SoundeventHash != 0) hash ^= SoundeventHash.GetHashCode();
      if (SourceEntityIndex != 0) hash ^= SourceEntityIndex.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SoundeventHash != 0) {
        output.WriteRawTag(13);
        output.WriteFixed32(SoundeventHash);
      }
      if (SourceEntityIndex != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(SourceEntityIndex);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SoundeventHash != 0) {
        size += 1 + 4;
      }
      if (SourceEntityIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SourceEntityIndex);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CMsgSosStopSoundEventHash other) {
      if (other == null) {
        return;
      }
      if (other.SoundeventHash != 0) {
        SoundeventHash = other.SoundeventHash;
      }
      if (other.SourceEntityIndex != 0) {
        SourceEntityIndex = other.SourceEntityIndex;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            SoundeventHash = input.ReadFixed32();
            break;
          }
          case 16: {
            SourceEntityIndex = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CMsgSosSetSoundEventParams : pb::IMessage<CMsgSosSetSoundEventParams> {
    private static readonly pb::MessageParser<CMsgSosSetSoundEventParams> _parser = new pb::MessageParser<CMsgSosSetSoundEventParams>(() => new CMsgSosSetSoundEventParams());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CMsgSosSetSoundEventParams> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.Dota.S2GameeventsReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgSosSetSoundEventParams() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgSosSetSoundEventParams(CMsgSosSetSoundEventParams other) : this() {
      soundeventGuid_ = other.soundeventGuid_;
      packedParams_ = other.packedParams_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgSosSetSoundEventParams Clone() {
      return new CMsgSosSetSoundEventParams(this);
    }

    /// <summary>Field number for the "soundevent_guid" field.</summary>
    public const int SoundeventGuidFieldNumber = 1;
    private int soundeventGuid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SoundeventGuid {
      get { return soundeventGuid_; }
      set {
        soundeventGuid_ = value;
      }
    }

    /// <summary>Field number for the "packed_params" field.</summary>
    public const int PackedParamsFieldNumber = 5;
    private pb::ByteString packedParams_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString PackedParams {
      get { return packedParams_; }
      set {
        packedParams_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CMsgSosSetSoundEventParams);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CMsgSosSetSoundEventParams other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SoundeventGuid != other.SoundeventGuid) return false;
      if (PackedParams != other.PackedParams) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SoundeventGuid != 0) hash ^= SoundeventGuid.GetHashCode();
      if (PackedParams.Length != 0) hash ^= PackedParams.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SoundeventGuid != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(SoundeventGuid);
      }
      if (PackedParams.Length != 0) {
        output.WriteRawTag(42);
        output.WriteBytes(PackedParams);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SoundeventGuid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SoundeventGuid);
      }
      if (PackedParams.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(PackedParams);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CMsgSosSetSoundEventParams other) {
      if (other == null) {
        return;
      }
      if (other.SoundeventGuid != 0) {
        SoundeventGuid = other.SoundeventGuid;
      }
      if (other.PackedParams.Length != 0) {
        PackedParams = other.PackedParams;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            SoundeventGuid = input.ReadInt32();
            break;
          }
          case 42: {
            PackedParams = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
