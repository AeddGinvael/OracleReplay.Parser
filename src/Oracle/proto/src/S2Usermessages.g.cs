// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: s2_usermessages.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Proto.Dota {

  /// <summary>Holder for reflection information generated from s2_usermessages.proto</summary>
  public static partial class S2UsermessagesReflection {

    #region Descriptor
    /// <summary>File descriptor for s2_usermessages.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static S2UsermessagesReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChVzMl91c2VybWVzc2FnZXMucHJvdG8SD2dvb2dsZS5wcm90b2J1ZhoWbmV0",
            "d29ya2Jhc2V0eXBlcy5wcm90byKOAQoUQ1VzZXJNZXNzYWdlU2F5VGV4dDIS",
            "EwoLZW50aXR5aW5kZXgYASABKA0SDAoEY2hhdBgCIAEoCBITCgttZXNzYWdl",
            "bmFtZRgDIAEoCRIOCgZwYXJhbTEYBCABKAkSDgoGcGFyYW0yGAUgASgJEg4K",
            "BnBhcmFtMxgGIAEoCRIOCgZwYXJhbTQYByABKAkiMgoTQ1VzZXJNZXNzYWdl",
            "VGV4dE1zZxIMCgRkZXN0GAEgASgNEg0KBXBhcmFtGAIgAygJIhYKFENVc2Vy",
            "TWVzc2FnZVJlc2V0SFVEIjgKFUNVc2VyTWVzc2FnZVNlbmRBdWRpbxIRCglz",
            "b3VuZG5hbWUYASABKAkSDAoEc3RvcBgCIAEoCCJXChVDVXNlck1lc3NhZ2VW",
            "b2ljZU1hc2sSFwoPZ2FtZXJ1bGVzX21hc2tzGAEgAygNEhEKCWJhbl9tYXNr",
            "cxgCIAMoDRISCgptb2RfZW5hYmxlGAMgASgIIhoKGENFbnRpdHlNZXNzYWdl",
            "UGxheUppbmdsZSJhChdDVXNlck1lc3NhZ2VIYXB0aWNQdWxzZRIPCgdoYW5k",
            "X2lkGAEgASgFEjUKCnB1bHNlX3R5cGUYAiABKA4yIS5nb29nbGUucHJvdG9i",
            "dWYuRUhhcHRpY1B1bHNlVHlwZSIzChtDRW50aXR5TWVzc2FnZVNjcmVlbk92",
            "ZXJsYXkSFAoMc3RhcnRfZWZmZWN0GAEgASgIIjYKHUNFbnRpdHlNZXNzYWdl",
            "UmVtb3ZlQWxsRGVjYWxzEhUKDXJlbW92ZV9kZWNhbHMYASABKAgiTAocQ0Vu",
            "dGl0eU1lc3NhZ2VQcm9wYWdhdGVGb3JjZRIsCgdpbXB1bHNlGAEgASgLMhsu",
            "Z29vZ2xlLnByb3RvYnVmLkNNc2dWZWN0b3IiqAEKFUNFbnRpdHlNZXNzYWdl",
            "RG9TcGFyaxIrCgZvcmlnaW4YASABKAsyGy5nb29nbGUucHJvdG9idWYuQ01z",
            "Z1ZlY3RvchITCgtlbnRpdHlpbmRleBgCIAEoDRIOCgZyYWRpdXMYAyABKAIS",
            "DQoFY29sb3IYBCABKAcSDQoFYmVhbXMYBSABKA0SDQoFdGhpY2sYBiABKAIS",
            "EAoIZHVyYXRpb24YByABKAIiVgoWQ0VudGl0eU1lc3NhZ2VGaXhBbmdsZRIQ",
            "CghyZWxhdGl2ZRgBIAEoCBIqCgVhbmdsZRgCIAEoCzIbLmdvb2dsZS5wcm90",
            "b2J1Zi5DTXNnUUFuZ2xlIiUKEUNVc2VyTXNnX0h1ZEVycm9yEhAKCG9yZGVy",
            "X2lkGAEgASgFIksKJ0NVc2VyTXNnX0N1c3RvbUdhbWVFdmVudF9DbGllbnRU",
            "b1NlcnZlchISCgpldmVudF9uYW1lGAEgASgJEgwKBGRhdGEYAiABKAwiSwon",
            "Q1VzZXJNc2dfQ3VzdG9tR2FtZUV2ZW50X1NlcnZlclRvQ2xpZW50EhIKCmV2",
            "ZW50X25hbWUYASABKAkSDAoEZGF0YRgCIAEoDCI+Ci5DVXNlck1zZ19UcmFj",
            "a2VkQ29udHJvbGxlcklucHV0X0NsaWVudFRvU2VydmVyEgwKBGRhdGEYASAB",
            "KAwqgAcKEUVCYXNlVXNlck1lc3NhZ2VzEg0KCVVNX1VLTk9XThAAEhcKE1VN",
            "X0FjaGlldmVtZW50RXZlbnQQZRITCg9VTV9DbG9zZUNhcHRpb24QZhIZChVV",
            "TV9DbG9zZUNhcHRpb25EaXJlY3QQZxIXChNVTV9DdXJyZW50VGltZXNjYWxl",
            "EGgSFwoTVU1fRGVzaXJlZFRpbWVzY2FsZRBpEgsKB1VNX0ZhZGUQahIQCgxV",
            "TV9HYW1lVGl0bGUQaxIPCgtVTV9IaW50VGV4dBBtEg0KCVVNX0h1ZE1zZxBu",
            "Eg4KClVNX0h1ZFRleHQQbxISCg5VTV9LZXlIaW50VGV4dBBwEhIKDlVNX0Nv",
            "bG9yZWRUZXh0EHESEwoPVU1fUmVxdWVzdFN0YXRlEHISDwoLVU1fUmVzZXRI",
            "VUQQcxINCglVTV9SdW1ibGUQdBIOCgpVTV9TYXlUZXh0EHUSDwoLVU1fU2F5",
            "VGV4dDIQdhIVChFVTV9TYXlUZXh0Q2hhbm5lbBB3EgwKCFVNX1NoYWtlEHgS",
            "DwoLVU1fU2hha2VEaXIQeRIOCgpVTV9UZXh0TXNnEHwSEQoNVU1fU2NyZWVu",
            "VGlsdBB9EgwKCFVNX1RyYWluEH4SDwoLVU1fVkdVSU1lbnUQfxIRCgxVTV9W",
            "b2ljZU1hc2sQgAESFQoQVU1fVm9pY2VTdWJ0aXRsZRCBARIRCgxVTV9TZW5k",
            "QXVkaW8QggESEgoNVU1fSXRlbVBpY2t1cBCDARISCg1VTV9BbW1vRGVuaWVk",
            "EIQBEhYKEVVNX0Nyb3NzaGFpckFuZ2xlEIUBEhAKC1VNX1Nob3dNZW51EIYB",
            "EhIKDVVNX0NyZWRpdHNNc2cQhwESHwoaVU1fQ2xvc2VDYXB0aW9uUGxhY2Vo",
            "b2xkZXIQjgESGAoTVU1fQ2FtZXJhVHJhbnNpdGlvbhCPARIWChFVTV9BdWRp",
            "b1BhcmFtZXRlchCQARIXChJVTV9QYXJ0aWNsZU1hbmFnZXIQkQESEAoLVU1f",
            "SHVkRXJyb3IQkgESFwoSVU1fQ3VzdG9tR2FtZUV2ZW50EJQBEhcKElVNX0hh",
            "bmRIYXB0aWNQdWxzZRCVARIXChJVTV9BbmltR3JhcGhVcGRhdGUQlgESHgoZ",
            "VU1fSGFuZEhhcHRpY1B1bHNlUHJlY2lzZRCXARIQCgtVTV9NQVhfQkFTRRDI",
            "ASqjAQoTRUJhc2VFbnRpdHlNZXNzYWdlcxINCglFTV9VS05PV04QABISCg1F",
            "TV9QbGF5SmluZ2xlEIgBEhUKEEVNX1NjcmVlbk92ZXJsYXkQiQESFwoSRU1f",
            "UmVtb3ZlQWxsRGVjYWxzEIoBEhYKEUVNX1Byb3BhZ2F0ZUZvcmNlEIsBEg8K",
            "CkVNX0RvU3BhcmsQjAESEAoLRU1fRml4QW5nbGUQjQEqdAoQRUhhcHRpY1B1",
            "bHNlVHlwZRIeChpWUl9IQU5EX0hBUFRJQ19QVUxTRV9MSUdIVBAAEh8KG1ZS",
            "X0hBTkRfSEFQVElDX1BVTFNFX01FRElVTRABEh8KG1ZSX0hBTkRfSEFQVElD",
            "X1BVTFNFX1NUUk9ORxACQhJIAYABAKoCClByb3RvLkRvdGFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Proto.Dota.NetworkbasetypesReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Proto.Dota.EBaseUserMessages), typeof(global::Proto.Dota.EBaseEntityMessages), typeof(global::Proto.Dota.EHapticPulseType), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.Dota.CUserMessageSayText2), global::Proto.Dota.CUserMessageSayText2.Parser, new[]{ "Entityindex", "Chat", "Messagename", "Param1", "Param2", "Param3", "Param4" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.Dota.CUserMessageTextMsg), global::Proto.Dota.CUserMessageTextMsg.Parser, new[]{ "Dest", "Param" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.Dota.CUserMessageResetHUD), global::Proto.Dota.CUserMessageResetHUD.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.Dota.CUserMessageSendAudio), global::Proto.Dota.CUserMessageSendAudio.Parser, new[]{ "Soundname", "Stop" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.Dota.CUserMessageVoiceMask), global::Proto.Dota.CUserMessageVoiceMask.Parser, new[]{ "GamerulesMasks", "BanMasks", "ModEnable" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.Dota.CEntityMessagePlayJingle), global::Proto.Dota.CEntityMessagePlayJingle.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.Dota.CUserMessageHapticPulse), global::Proto.Dota.CUserMessageHapticPulse.Parser, new[]{ "HandId", "PulseType" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.Dota.CEntityMessageScreenOverlay), global::Proto.Dota.CEntityMessageScreenOverlay.Parser, new[]{ "StartEffect" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.Dota.CEntityMessageRemoveAllDecals), global::Proto.Dota.CEntityMessageRemoveAllDecals.Parser, new[]{ "RemoveDecals" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.Dota.CEntityMessagePropagateForce), global::Proto.Dota.CEntityMessagePropagateForce.Parser, new[]{ "Impulse" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.Dota.CEntityMessageDoSpark), global::Proto.Dota.CEntityMessageDoSpark.Parser, new[]{ "Origin", "Entityindex", "Radius", "Color", "Beams", "Thick", "Duration" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.Dota.CEntityMessageFixAngle), global::Proto.Dota.CEntityMessageFixAngle.Parser, new[]{ "Relative", "Angle" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.Dota.CUserMsg_HudError), global::Proto.Dota.CUserMsg_HudError.Parser, new[]{ "OrderId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.Dota.CUserMsg_CustomGameEvent_ClientToServer), global::Proto.Dota.CUserMsg_CustomGameEvent_ClientToServer.Parser, new[]{ "EventName", "Data" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.Dota.CUserMsg_CustomGameEvent_ServerToClient), global::Proto.Dota.CUserMsg_CustomGameEvent_ServerToClient.Parser, new[]{ "EventName", "Data" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.Dota.CUserMsg_TrackedControllerInput_ClientToServer), global::Proto.Dota.CUserMsg_TrackedControllerInput_ClientToServer.Parser, new[]{ "Data" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum EBaseUserMessages {
    [pbr::OriginalName("UM_UKNOWN")] UmUknown = 0,
    [pbr::OriginalName("UM_AchievementEvent")] UmAchievementEvent = 101,
    [pbr::OriginalName("UM_CloseCaption")] UmCloseCaption = 102,
    [pbr::OriginalName("UM_CloseCaptionDirect")] UmCloseCaptionDirect = 103,
    [pbr::OriginalName("UM_CurrentTimescale")] UmCurrentTimescale = 104,
    [pbr::OriginalName("UM_DesiredTimescale")] UmDesiredTimescale = 105,
    [pbr::OriginalName("UM_Fade")] UmFade = 106,
    [pbr::OriginalName("UM_GameTitle")] UmGameTitle = 107,
    [pbr::OriginalName("UM_HintText")] UmHintText = 109,
    [pbr::OriginalName("UM_HudMsg")] UmHudMsg = 110,
    [pbr::OriginalName("UM_HudText")] UmHudText = 111,
    [pbr::OriginalName("UM_KeyHintText")] UmKeyHintText = 112,
    [pbr::OriginalName("UM_ColoredText")] UmColoredText = 113,
    [pbr::OriginalName("UM_RequestState")] UmRequestState = 114,
    [pbr::OriginalName("UM_ResetHUD")] UmResetHud = 115,
    [pbr::OriginalName("UM_Rumble")] UmRumble = 116,
    [pbr::OriginalName("UM_SayText")] UmSayText = 117,
    [pbr::OriginalName("UM_SayText2")] UmSayText2 = 118,
    [pbr::OriginalName("UM_SayTextChannel")] UmSayTextChannel = 119,
    [pbr::OriginalName("UM_Shake")] UmShake = 120,
    [pbr::OriginalName("UM_ShakeDir")] UmShakeDir = 121,
    [pbr::OriginalName("UM_TextMsg")] UmTextMsg = 124,
    [pbr::OriginalName("UM_ScreenTilt")] UmScreenTilt = 125,
    [pbr::OriginalName("UM_Train")] UmTrain = 126,
    [pbr::OriginalName("UM_VGUIMenu")] UmVguimenu = 127,
    [pbr::OriginalName("UM_VoiceMask")] UmVoiceMask = 128,
    [pbr::OriginalName("UM_VoiceSubtitle")] UmVoiceSubtitle = 129,
    [pbr::OriginalName("UM_SendAudio")] UmSendAudio = 130,
    [pbr::OriginalName("UM_ItemPickup")] UmItemPickup = 131,
    [pbr::OriginalName("UM_AmmoDenied")] UmAmmoDenied = 132,
    [pbr::OriginalName("UM_CrosshairAngle")] UmCrosshairAngle = 133,
    [pbr::OriginalName("UM_ShowMenu")] UmShowMenu = 134,
    [pbr::OriginalName("UM_CreditsMsg")] UmCreditsMsg = 135,
    [pbr::OriginalName("UM_CloseCaptionPlaceholder")] UmCloseCaptionPlaceholder = 142,
    [pbr::OriginalName("UM_CameraTransition")] UmCameraTransition = 143,
    [pbr::OriginalName("UM_AudioParameter")] UmAudioParameter = 144,
    [pbr::OriginalName("UM_ParticleManager")] UmParticleManager = 145,
    [pbr::OriginalName("UM_HudError")] UmHudError = 146,
    [pbr::OriginalName("UM_CustomGameEvent")] UmCustomGameEvent = 148,
    [pbr::OriginalName("UM_HandHapticPulse")] UmHandHapticPulse = 149,
    [pbr::OriginalName("UM_AnimGraphUpdate")] UmAnimGraphUpdate = 150,
    [pbr::OriginalName("UM_HandHapticPulsePrecise")] UmHandHapticPulsePrecise = 151,
    [pbr::OriginalName("UM_MAX_BASE")] UmMaxBase = 200,
  }

  public enum EBaseEntityMessages {
    [pbr::OriginalName("EM_UKNOWN")] EmUknown = 0,
    [pbr::OriginalName("EM_PlayJingle")] EmPlayJingle = 136,
    [pbr::OriginalName("EM_ScreenOverlay")] EmScreenOverlay = 137,
    [pbr::OriginalName("EM_RemoveAllDecals")] EmRemoveAllDecals = 138,
    [pbr::OriginalName("EM_PropagateForce")] EmPropagateForce = 139,
    [pbr::OriginalName("EM_DoSpark")] EmDoSpark = 140,
    [pbr::OriginalName("EM_FixAngle")] EmFixAngle = 141,
  }

  public enum EHapticPulseType {
    [pbr::OriginalName("VR_HAND_HAPTIC_PULSE_LIGHT")] VrHandHapticPulseLight = 0,
    [pbr::OriginalName("VR_HAND_HAPTIC_PULSE_MEDIUM")] VrHandHapticPulseMedium = 1,
    [pbr::OriginalName("VR_HAND_HAPTIC_PULSE_STRONG")] VrHandHapticPulseStrong = 2,
  }

  #endregion

  #region Messages
  public sealed partial class CUserMessageSayText2 : pb::IMessage<CUserMessageSayText2> {
    private static readonly pb::MessageParser<CUserMessageSayText2> _parser = new pb::MessageParser<CUserMessageSayText2>(() => new CUserMessageSayText2());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CUserMessageSayText2> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.Dota.S2UsermessagesReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CUserMessageSayText2() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CUserMessageSayText2(CUserMessageSayText2 other) : this() {
      entityindex_ = other.entityindex_;
      chat_ = other.chat_;
      messagename_ = other.messagename_;
      param1_ = other.param1_;
      param2_ = other.param2_;
      param3_ = other.param3_;
      param4_ = other.param4_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CUserMessageSayText2 Clone() {
      return new CUserMessageSayText2(this);
    }

    /// <summary>Field number for the "entityindex" field.</summary>
    public const int EntityindexFieldNumber = 1;
    private uint entityindex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Entityindex {
      get { return entityindex_; }
      set {
        entityindex_ = value;
      }
    }

    /// <summary>Field number for the "chat" field.</summary>
    public const int ChatFieldNumber = 2;
    private bool chat_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Chat {
      get { return chat_; }
      set {
        chat_ = value;
      }
    }

    /// <summary>Field number for the "messagename" field.</summary>
    public const int MessagenameFieldNumber = 3;
    private string messagename_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Messagename {
      get { return messagename_; }
      set {
        messagename_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "param1" field.</summary>
    public const int Param1FieldNumber = 4;
    private string param1_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Param1 {
      get { return param1_; }
      set {
        param1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "param2" field.</summary>
    public const int Param2FieldNumber = 5;
    private string param2_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Param2 {
      get { return param2_; }
      set {
        param2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "param3" field.</summary>
    public const int Param3FieldNumber = 6;
    private string param3_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Param3 {
      get { return param3_; }
      set {
        param3_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "param4" field.</summary>
    public const int Param4FieldNumber = 7;
    private string param4_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Param4 {
      get { return param4_; }
      set {
        param4_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CUserMessageSayText2);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CUserMessageSayText2 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Entityindex != other.Entityindex) return false;
      if (Chat != other.Chat) return false;
      if (Messagename != other.Messagename) return false;
      if (Param1 != other.Param1) return false;
      if (Param2 != other.Param2) return false;
      if (Param3 != other.Param3) return false;
      if (Param4 != other.Param4) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Entityindex != 0) hash ^= Entityindex.GetHashCode();
      if (Chat != false) hash ^= Chat.GetHashCode();
      if (Messagename.Length != 0) hash ^= Messagename.GetHashCode();
      if (Param1.Length != 0) hash ^= Param1.GetHashCode();
      if (Param2.Length != 0) hash ^= Param2.GetHashCode();
      if (Param3.Length != 0) hash ^= Param3.GetHashCode();
      if (Param4.Length != 0) hash ^= Param4.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Entityindex != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Entityindex);
      }
      if (Chat != false) {
        output.WriteRawTag(16);
        output.WriteBool(Chat);
      }
      if (Messagename.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Messagename);
      }
      if (Param1.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Param1);
      }
      if (Param2.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Param2);
      }
      if (Param3.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Param3);
      }
      if (Param4.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Param4);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Entityindex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Entityindex);
      }
      if (Chat != false) {
        size += 1 + 1;
      }
      if (Messagename.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Messagename);
      }
      if (Param1.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Param1);
      }
      if (Param2.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Param2);
      }
      if (Param3.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Param3);
      }
      if (Param4.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Param4);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CUserMessageSayText2 other) {
      if (other == null) {
        return;
      }
      if (other.Entityindex != 0) {
        Entityindex = other.Entityindex;
      }
      if (other.Chat != false) {
        Chat = other.Chat;
      }
      if (other.Messagename.Length != 0) {
        Messagename = other.Messagename;
      }
      if (other.Param1.Length != 0) {
        Param1 = other.Param1;
      }
      if (other.Param2.Length != 0) {
        Param2 = other.Param2;
      }
      if (other.Param3.Length != 0) {
        Param3 = other.Param3;
      }
      if (other.Param4.Length != 0) {
        Param4 = other.Param4;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Entityindex = input.ReadUInt32();
            break;
          }
          case 16: {
            Chat = input.ReadBool();
            break;
          }
          case 26: {
            Messagename = input.ReadString();
            break;
          }
          case 34: {
            Param1 = input.ReadString();
            break;
          }
          case 42: {
            Param2 = input.ReadString();
            break;
          }
          case 50: {
            Param3 = input.ReadString();
            break;
          }
          case 58: {
            Param4 = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CUserMessageTextMsg : pb::IMessage<CUserMessageTextMsg> {
    private static readonly pb::MessageParser<CUserMessageTextMsg> _parser = new pb::MessageParser<CUserMessageTextMsg>(() => new CUserMessageTextMsg());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CUserMessageTextMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.Dota.S2UsermessagesReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CUserMessageTextMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CUserMessageTextMsg(CUserMessageTextMsg other) : this() {
      dest_ = other.dest_;
      param_ = other.param_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CUserMessageTextMsg Clone() {
      return new CUserMessageTextMsg(this);
    }

    /// <summary>Field number for the "dest" field.</summary>
    public const int DestFieldNumber = 1;
    private uint dest_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Dest {
      get { return dest_; }
      set {
        dest_ = value;
      }
    }

    /// <summary>Field number for the "param" field.</summary>
    public const int ParamFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_param_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> param_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Param {
      get { return param_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CUserMessageTextMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CUserMessageTextMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Dest != other.Dest) return false;
      if(!param_.Equals(other.param_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Dest != 0) hash ^= Dest.GetHashCode();
      hash ^= param_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Dest != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Dest);
      }
      param_.WriteTo(output, _repeated_param_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Dest != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Dest);
      }
      size += param_.CalculateSize(_repeated_param_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CUserMessageTextMsg other) {
      if (other == null) {
        return;
      }
      if (other.Dest != 0) {
        Dest = other.Dest;
      }
      param_.Add(other.param_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Dest = input.ReadUInt32();
            break;
          }
          case 18: {
            param_.AddEntriesFrom(input, _repeated_param_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CUserMessageResetHUD : pb::IMessage<CUserMessageResetHUD> {
    private static readonly pb::MessageParser<CUserMessageResetHUD> _parser = new pb::MessageParser<CUserMessageResetHUD>(() => new CUserMessageResetHUD());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CUserMessageResetHUD> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.Dota.S2UsermessagesReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CUserMessageResetHUD() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CUserMessageResetHUD(CUserMessageResetHUD other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CUserMessageResetHUD Clone() {
      return new CUserMessageResetHUD(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CUserMessageResetHUD);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CUserMessageResetHUD other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CUserMessageResetHUD other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class CUserMessageSendAudio : pb::IMessage<CUserMessageSendAudio> {
    private static readonly pb::MessageParser<CUserMessageSendAudio> _parser = new pb::MessageParser<CUserMessageSendAudio>(() => new CUserMessageSendAudio());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CUserMessageSendAudio> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.Dota.S2UsermessagesReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CUserMessageSendAudio() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CUserMessageSendAudio(CUserMessageSendAudio other) : this() {
      soundname_ = other.soundname_;
      stop_ = other.stop_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CUserMessageSendAudio Clone() {
      return new CUserMessageSendAudio(this);
    }

    /// <summary>Field number for the "soundname" field.</summary>
    public const int SoundnameFieldNumber = 1;
    private string soundname_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Soundname {
      get { return soundname_; }
      set {
        soundname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "stop" field.</summary>
    public const int StopFieldNumber = 2;
    private bool stop_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Stop {
      get { return stop_; }
      set {
        stop_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CUserMessageSendAudio);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CUserMessageSendAudio other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Soundname != other.Soundname) return false;
      if (Stop != other.Stop) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Soundname.Length != 0) hash ^= Soundname.GetHashCode();
      if (Stop != false) hash ^= Stop.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Soundname.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Soundname);
      }
      if (Stop != false) {
        output.WriteRawTag(16);
        output.WriteBool(Stop);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Soundname.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Soundname);
      }
      if (Stop != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CUserMessageSendAudio other) {
      if (other == null) {
        return;
      }
      if (other.Soundname.Length != 0) {
        Soundname = other.Soundname;
      }
      if (other.Stop != false) {
        Stop = other.Stop;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Soundname = input.ReadString();
            break;
          }
          case 16: {
            Stop = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CUserMessageVoiceMask : pb::IMessage<CUserMessageVoiceMask> {
    private static readonly pb::MessageParser<CUserMessageVoiceMask> _parser = new pb::MessageParser<CUserMessageVoiceMask>(() => new CUserMessageVoiceMask());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CUserMessageVoiceMask> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.Dota.S2UsermessagesReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CUserMessageVoiceMask() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CUserMessageVoiceMask(CUserMessageVoiceMask other) : this() {
      gamerulesMasks_ = other.gamerulesMasks_.Clone();
      banMasks_ = other.banMasks_.Clone();
      modEnable_ = other.modEnable_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CUserMessageVoiceMask Clone() {
      return new CUserMessageVoiceMask(this);
    }

    /// <summary>Field number for the "gamerules_masks" field.</summary>
    public const int GamerulesMasksFieldNumber = 1;
    private static readonly pb::FieldCodec<uint> _repeated_gamerulesMasks_codec
        = pb::FieldCodec.ForUInt32(10);
    private readonly pbc::RepeatedField<uint> gamerulesMasks_ = new pbc::RepeatedField<uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<uint> GamerulesMasks {
      get { return gamerulesMasks_; }
    }

    /// <summary>Field number for the "ban_masks" field.</summary>
    public const int BanMasksFieldNumber = 2;
    private static readonly pb::FieldCodec<uint> _repeated_banMasks_codec
        = pb::FieldCodec.ForUInt32(18);
    private readonly pbc::RepeatedField<uint> banMasks_ = new pbc::RepeatedField<uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<uint> BanMasks {
      get { return banMasks_; }
    }

    /// <summary>Field number for the "mod_enable" field.</summary>
    public const int ModEnableFieldNumber = 3;
    private bool modEnable_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ModEnable {
      get { return modEnable_; }
      set {
        modEnable_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CUserMessageVoiceMask);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CUserMessageVoiceMask other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!gamerulesMasks_.Equals(other.gamerulesMasks_)) return false;
      if(!banMasks_.Equals(other.banMasks_)) return false;
      if (ModEnable != other.ModEnable) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= gamerulesMasks_.GetHashCode();
      hash ^= banMasks_.GetHashCode();
      if (ModEnable != false) hash ^= ModEnable.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      gamerulesMasks_.WriteTo(output, _repeated_gamerulesMasks_codec);
      banMasks_.WriteTo(output, _repeated_banMasks_codec);
      if (ModEnable != false) {
        output.WriteRawTag(24);
        output.WriteBool(ModEnable);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += gamerulesMasks_.CalculateSize(_repeated_gamerulesMasks_codec);
      size += banMasks_.CalculateSize(_repeated_banMasks_codec);
      if (ModEnable != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CUserMessageVoiceMask other) {
      if (other == null) {
        return;
      }
      gamerulesMasks_.Add(other.gamerulesMasks_);
      banMasks_.Add(other.banMasks_);
      if (other.ModEnable != false) {
        ModEnable = other.ModEnable;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            gamerulesMasks_.AddEntriesFrom(input, _repeated_gamerulesMasks_codec);
            break;
          }
          case 18:
          case 16: {
            banMasks_.AddEntriesFrom(input, _repeated_banMasks_codec);
            break;
          }
          case 24: {
            ModEnable = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CEntityMessagePlayJingle : pb::IMessage<CEntityMessagePlayJingle> {
    private static readonly pb::MessageParser<CEntityMessagePlayJingle> _parser = new pb::MessageParser<CEntityMessagePlayJingle>(() => new CEntityMessagePlayJingle());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CEntityMessagePlayJingle> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.Dota.S2UsermessagesReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CEntityMessagePlayJingle() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CEntityMessagePlayJingle(CEntityMessagePlayJingle other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CEntityMessagePlayJingle Clone() {
      return new CEntityMessagePlayJingle(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CEntityMessagePlayJingle);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CEntityMessagePlayJingle other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CEntityMessagePlayJingle other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class CUserMessageHapticPulse : pb::IMessage<CUserMessageHapticPulse> {
    private static readonly pb::MessageParser<CUserMessageHapticPulse> _parser = new pb::MessageParser<CUserMessageHapticPulse>(() => new CUserMessageHapticPulse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CUserMessageHapticPulse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.Dota.S2UsermessagesReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CUserMessageHapticPulse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CUserMessageHapticPulse(CUserMessageHapticPulse other) : this() {
      handId_ = other.handId_;
      pulseType_ = other.pulseType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CUserMessageHapticPulse Clone() {
      return new CUserMessageHapticPulse(this);
    }

    /// <summary>Field number for the "hand_id" field.</summary>
    public const int HandIdFieldNumber = 1;
    private int handId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int HandId {
      get { return handId_; }
      set {
        handId_ = value;
      }
    }

    /// <summary>Field number for the "pulse_type" field.</summary>
    public const int PulseTypeFieldNumber = 2;
    private global::Proto.Dota.EHapticPulseType pulseType_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Proto.Dota.EHapticPulseType PulseType {
      get { return pulseType_; }
      set {
        pulseType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CUserMessageHapticPulse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CUserMessageHapticPulse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (HandId != other.HandId) return false;
      if (PulseType != other.PulseType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HandId != 0) hash ^= HandId.GetHashCode();
      if (PulseType != 0) hash ^= PulseType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HandId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(HandId);
      }
      if (PulseType != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) PulseType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HandId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(HandId);
      }
      if (PulseType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PulseType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CUserMessageHapticPulse other) {
      if (other == null) {
        return;
      }
      if (other.HandId != 0) {
        HandId = other.HandId;
      }
      if (other.PulseType != 0) {
        PulseType = other.PulseType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            HandId = input.ReadInt32();
            break;
          }
          case 16: {
            pulseType_ = (global::Proto.Dota.EHapticPulseType) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CEntityMessageScreenOverlay : pb::IMessage<CEntityMessageScreenOverlay> {
    private static readonly pb::MessageParser<CEntityMessageScreenOverlay> _parser = new pb::MessageParser<CEntityMessageScreenOverlay>(() => new CEntityMessageScreenOverlay());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CEntityMessageScreenOverlay> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.Dota.S2UsermessagesReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CEntityMessageScreenOverlay() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CEntityMessageScreenOverlay(CEntityMessageScreenOverlay other) : this() {
      startEffect_ = other.startEffect_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CEntityMessageScreenOverlay Clone() {
      return new CEntityMessageScreenOverlay(this);
    }

    /// <summary>Field number for the "start_effect" field.</summary>
    public const int StartEffectFieldNumber = 1;
    private bool startEffect_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool StartEffect {
      get { return startEffect_; }
      set {
        startEffect_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CEntityMessageScreenOverlay);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CEntityMessageScreenOverlay other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StartEffect != other.StartEffect) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (StartEffect != false) hash ^= StartEffect.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (StartEffect != false) {
        output.WriteRawTag(8);
        output.WriteBool(StartEffect);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (StartEffect != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CEntityMessageScreenOverlay other) {
      if (other == null) {
        return;
      }
      if (other.StartEffect != false) {
        StartEffect = other.StartEffect;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            StartEffect = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CEntityMessageRemoveAllDecals : pb::IMessage<CEntityMessageRemoveAllDecals> {
    private static readonly pb::MessageParser<CEntityMessageRemoveAllDecals> _parser = new pb::MessageParser<CEntityMessageRemoveAllDecals>(() => new CEntityMessageRemoveAllDecals());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CEntityMessageRemoveAllDecals> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.Dota.S2UsermessagesReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CEntityMessageRemoveAllDecals() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CEntityMessageRemoveAllDecals(CEntityMessageRemoveAllDecals other) : this() {
      removeDecals_ = other.removeDecals_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CEntityMessageRemoveAllDecals Clone() {
      return new CEntityMessageRemoveAllDecals(this);
    }

    /// <summary>Field number for the "remove_decals" field.</summary>
    public const int RemoveDecalsFieldNumber = 1;
    private bool removeDecals_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool RemoveDecals {
      get { return removeDecals_; }
      set {
        removeDecals_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CEntityMessageRemoveAllDecals);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CEntityMessageRemoveAllDecals other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RemoveDecals != other.RemoveDecals) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RemoveDecals != false) hash ^= RemoveDecals.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RemoveDecals != false) {
        output.WriteRawTag(8);
        output.WriteBool(RemoveDecals);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RemoveDecals != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CEntityMessageRemoveAllDecals other) {
      if (other == null) {
        return;
      }
      if (other.RemoveDecals != false) {
        RemoveDecals = other.RemoveDecals;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RemoveDecals = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CEntityMessagePropagateForce : pb::IMessage<CEntityMessagePropagateForce> {
    private static readonly pb::MessageParser<CEntityMessagePropagateForce> _parser = new pb::MessageParser<CEntityMessagePropagateForce>(() => new CEntityMessagePropagateForce());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CEntityMessagePropagateForce> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.Dota.S2UsermessagesReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CEntityMessagePropagateForce() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CEntityMessagePropagateForce(CEntityMessagePropagateForce other) : this() {
      impulse_ = other.impulse_ != null ? other.impulse_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CEntityMessagePropagateForce Clone() {
      return new CEntityMessagePropagateForce(this);
    }

    /// <summary>Field number for the "impulse" field.</summary>
    public const int ImpulseFieldNumber = 1;
    private global::Proto.Dota.CMsgVector impulse_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Proto.Dota.CMsgVector Impulse {
      get { return impulse_; }
      set {
        impulse_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CEntityMessagePropagateForce);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CEntityMessagePropagateForce other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Impulse, other.Impulse)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (impulse_ != null) hash ^= Impulse.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (impulse_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Impulse);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (impulse_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Impulse);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CEntityMessagePropagateForce other) {
      if (other == null) {
        return;
      }
      if (other.impulse_ != null) {
        if (impulse_ == null) {
          impulse_ = new global::Proto.Dota.CMsgVector();
        }
        Impulse.MergeFrom(other.Impulse);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (impulse_ == null) {
              impulse_ = new global::Proto.Dota.CMsgVector();
            }
            input.ReadMessage(impulse_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CEntityMessageDoSpark : pb::IMessage<CEntityMessageDoSpark> {
    private static readonly pb::MessageParser<CEntityMessageDoSpark> _parser = new pb::MessageParser<CEntityMessageDoSpark>(() => new CEntityMessageDoSpark());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CEntityMessageDoSpark> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.Dota.S2UsermessagesReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CEntityMessageDoSpark() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CEntityMessageDoSpark(CEntityMessageDoSpark other) : this() {
      origin_ = other.origin_ != null ? other.origin_.Clone() : null;
      entityindex_ = other.entityindex_;
      radius_ = other.radius_;
      color_ = other.color_;
      beams_ = other.beams_;
      thick_ = other.thick_;
      duration_ = other.duration_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CEntityMessageDoSpark Clone() {
      return new CEntityMessageDoSpark(this);
    }

    /// <summary>Field number for the "origin" field.</summary>
    public const int OriginFieldNumber = 1;
    private global::Proto.Dota.CMsgVector origin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Proto.Dota.CMsgVector Origin {
      get { return origin_; }
      set {
        origin_ = value;
      }
    }

    /// <summary>Field number for the "entityindex" field.</summary>
    public const int EntityindexFieldNumber = 2;
    private uint entityindex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Entityindex {
      get { return entityindex_; }
      set {
        entityindex_ = value;
      }
    }

    /// <summary>Field number for the "radius" field.</summary>
    public const int RadiusFieldNumber = 3;
    private float radius_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Radius {
      get { return radius_; }
      set {
        radius_ = value;
      }
    }

    /// <summary>Field number for the "color" field.</summary>
    public const int ColorFieldNumber = 4;
    private uint color_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Color {
      get { return color_; }
      set {
        color_ = value;
      }
    }

    /// <summary>Field number for the "beams" field.</summary>
    public const int BeamsFieldNumber = 5;
    private uint beams_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Beams {
      get { return beams_; }
      set {
        beams_ = value;
      }
    }

    /// <summary>Field number for the "thick" field.</summary>
    public const int ThickFieldNumber = 6;
    private float thick_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Thick {
      get { return thick_; }
      set {
        thick_ = value;
      }
    }

    /// <summary>Field number for the "duration" field.</summary>
    public const int DurationFieldNumber = 7;
    private float duration_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Duration {
      get { return duration_; }
      set {
        duration_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CEntityMessageDoSpark);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CEntityMessageDoSpark other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Origin, other.Origin)) return false;
      if (Entityindex != other.Entityindex) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Radius, other.Radius)) return false;
      if (Color != other.Color) return false;
      if (Beams != other.Beams) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Thick, other.Thick)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Duration, other.Duration)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (origin_ != null) hash ^= Origin.GetHashCode();
      if (Entityindex != 0) hash ^= Entityindex.GetHashCode();
      if (Radius != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Radius);
      if (Color != 0) hash ^= Color.GetHashCode();
      if (Beams != 0) hash ^= Beams.GetHashCode();
      if (Thick != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Thick);
      if (Duration != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Duration);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (origin_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Origin);
      }
      if (Entityindex != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Entityindex);
      }
      if (Radius != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Radius);
      }
      if (Color != 0) {
        output.WriteRawTag(37);
        output.WriteFixed32(Color);
      }
      if (Beams != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(Beams);
      }
      if (Thick != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(Thick);
      }
      if (Duration != 0F) {
        output.WriteRawTag(61);
        output.WriteFloat(Duration);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (origin_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Origin);
      }
      if (Entityindex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Entityindex);
      }
      if (Radius != 0F) {
        size += 1 + 4;
      }
      if (Color != 0) {
        size += 1 + 4;
      }
      if (Beams != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Beams);
      }
      if (Thick != 0F) {
        size += 1 + 4;
      }
      if (Duration != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CEntityMessageDoSpark other) {
      if (other == null) {
        return;
      }
      if (other.origin_ != null) {
        if (origin_ == null) {
          origin_ = new global::Proto.Dota.CMsgVector();
        }
        Origin.MergeFrom(other.Origin);
      }
      if (other.Entityindex != 0) {
        Entityindex = other.Entityindex;
      }
      if (other.Radius != 0F) {
        Radius = other.Radius;
      }
      if (other.Color != 0) {
        Color = other.Color;
      }
      if (other.Beams != 0) {
        Beams = other.Beams;
      }
      if (other.Thick != 0F) {
        Thick = other.Thick;
      }
      if (other.Duration != 0F) {
        Duration = other.Duration;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (origin_ == null) {
              origin_ = new global::Proto.Dota.CMsgVector();
            }
            input.ReadMessage(origin_);
            break;
          }
          case 16: {
            Entityindex = input.ReadUInt32();
            break;
          }
          case 29: {
            Radius = input.ReadFloat();
            break;
          }
          case 37: {
            Color = input.ReadFixed32();
            break;
          }
          case 40: {
            Beams = input.ReadUInt32();
            break;
          }
          case 53: {
            Thick = input.ReadFloat();
            break;
          }
          case 61: {
            Duration = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CEntityMessageFixAngle : pb::IMessage<CEntityMessageFixAngle> {
    private static readonly pb::MessageParser<CEntityMessageFixAngle> _parser = new pb::MessageParser<CEntityMessageFixAngle>(() => new CEntityMessageFixAngle());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CEntityMessageFixAngle> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.Dota.S2UsermessagesReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CEntityMessageFixAngle() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CEntityMessageFixAngle(CEntityMessageFixAngle other) : this() {
      relative_ = other.relative_;
      angle_ = other.angle_ != null ? other.angle_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CEntityMessageFixAngle Clone() {
      return new CEntityMessageFixAngle(this);
    }

    /// <summary>Field number for the "relative" field.</summary>
    public const int RelativeFieldNumber = 1;
    private bool relative_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Relative {
      get { return relative_; }
      set {
        relative_ = value;
      }
    }

    /// <summary>Field number for the "angle" field.</summary>
    public const int AngleFieldNumber = 2;
    private global::Proto.Dota.CMsgQAngle angle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Proto.Dota.CMsgQAngle Angle {
      get { return angle_; }
      set {
        angle_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CEntityMessageFixAngle);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CEntityMessageFixAngle other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Relative != other.Relative) return false;
      if (!object.Equals(Angle, other.Angle)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Relative != false) hash ^= Relative.GetHashCode();
      if (angle_ != null) hash ^= Angle.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Relative != false) {
        output.WriteRawTag(8);
        output.WriteBool(Relative);
      }
      if (angle_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Angle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Relative != false) {
        size += 1 + 1;
      }
      if (angle_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Angle);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CEntityMessageFixAngle other) {
      if (other == null) {
        return;
      }
      if (other.Relative != false) {
        Relative = other.Relative;
      }
      if (other.angle_ != null) {
        if (angle_ == null) {
          angle_ = new global::Proto.Dota.CMsgQAngle();
        }
        Angle.MergeFrom(other.Angle);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Relative = input.ReadBool();
            break;
          }
          case 18: {
            if (angle_ == null) {
              angle_ = new global::Proto.Dota.CMsgQAngle();
            }
            input.ReadMessage(angle_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CUserMsg_HudError : pb::IMessage<CUserMsg_HudError> {
    private static readonly pb::MessageParser<CUserMsg_HudError> _parser = new pb::MessageParser<CUserMsg_HudError>(() => new CUserMsg_HudError());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CUserMsg_HudError> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.Dota.S2UsermessagesReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CUserMsg_HudError() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CUserMsg_HudError(CUserMsg_HudError other) : this() {
      orderId_ = other.orderId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CUserMsg_HudError Clone() {
      return new CUserMsg_HudError(this);
    }

    /// <summary>Field number for the "order_id" field.</summary>
    public const int OrderIdFieldNumber = 1;
    private int orderId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int OrderId {
      get { return orderId_; }
      set {
        orderId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CUserMsg_HudError);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CUserMsg_HudError other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OrderId != other.OrderId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OrderId != 0) hash ^= OrderId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (OrderId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(OrderId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OrderId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(OrderId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CUserMsg_HudError other) {
      if (other == null) {
        return;
      }
      if (other.OrderId != 0) {
        OrderId = other.OrderId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            OrderId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CUserMsg_CustomGameEvent_ClientToServer : pb::IMessage<CUserMsg_CustomGameEvent_ClientToServer> {
    private static readonly pb::MessageParser<CUserMsg_CustomGameEvent_ClientToServer> _parser = new pb::MessageParser<CUserMsg_CustomGameEvent_ClientToServer>(() => new CUserMsg_CustomGameEvent_ClientToServer());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CUserMsg_CustomGameEvent_ClientToServer> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.Dota.S2UsermessagesReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CUserMsg_CustomGameEvent_ClientToServer() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CUserMsg_CustomGameEvent_ClientToServer(CUserMsg_CustomGameEvent_ClientToServer other) : this() {
      eventName_ = other.eventName_;
      data_ = other.data_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CUserMsg_CustomGameEvent_ClientToServer Clone() {
      return new CUserMsg_CustomGameEvent_ClientToServer(this);
    }

    /// <summary>Field number for the "event_name" field.</summary>
    public const int EventNameFieldNumber = 1;
    private string eventName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EventName {
      get { return eventName_; }
      set {
        eventName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 2;
    private pb::ByteString data_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Data {
      get { return data_; }
      set {
        data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CUserMsg_CustomGameEvent_ClientToServer);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CUserMsg_CustomGameEvent_ClientToServer other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (EventName != other.EventName) return false;
      if (Data != other.Data) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (EventName.Length != 0) hash ^= EventName.GetHashCode();
      if (Data.Length != 0) hash ^= Data.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (EventName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(EventName);
      }
      if (Data.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Data);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (EventName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EventName);
      }
      if (Data.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Data);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CUserMsg_CustomGameEvent_ClientToServer other) {
      if (other == null) {
        return;
      }
      if (other.EventName.Length != 0) {
        EventName = other.EventName;
      }
      if (other.Data.Length != 0) {
        Data = other.Data;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            EventName = input.ReadString();
            break;
          }
          case 18: {
            Data = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CUserMsg_CustomGameEvent_ServerToClient : pb::IMessage<CUserMsg_CustomGameEvent_ServerToClient> {
    private static readonly pb::MessageParser<CUserMsg_CustomGameEvent_ServerToClient> _parser = new pb::MessageParser<CUserMsg_CustomGameEvent_ServerToClient>(() => new CUserMsg_CustomGameEvent_ServerToClient());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CUserMsg_CustomGameEvent_ServerToClient> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.Dota.S2UsermessagesReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CUserMsg_CustomGameEvent_ServerToClient() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CUserMsg_CustomGameEvent_ServerToClient(CUserMsg_CustomGameEvent_ServerToClient other) : this() {
      eventName_ = other.eventName_;
      data_ = other.data_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CUserMsg_CustomGameEvent_ServerToClient Clone() {
      return new CUserMsg_CustomGameEvent_ServerToClient(this);
    }

    /// <summary>Field number for the "event_name" field.</summary>
    public const int EventNameFieldNumber = 1;
    private string eventName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EventName {
      get { return eventName_; }
      set {
        eventName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 2;
    private pb::ByteString data_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Data {
      get { return data_; }
      set {
        data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CUserMsg_CustomGameEvent_ServerToClient);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CUserMsg_CustomGameEvent_ServerToClient other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (EventName != other.EventName) return false;
      if (Data != other.Data) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (EventName.Length != 0) hash ^= EventName.GetHashCode();
      if (Data.Length != 0) hash ^= Data.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (EventName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(EventName);
      }
      if (Data.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Data);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (EventName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EventName);
      }
      if (Data.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Data);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CUserMsg_CustomGameEvent_ServerToClient other) {
      if (other == null) {
        return;
      }
      if (other.EventName.Length != 0) {
        EventName = other.EventName;
      }
      if (other.Data.Length != 0) {
        Data = other.Data;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            EventName = input.ReadString();
            break;
          }
          case 18: {
            Data = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CUserMsg_TrackedControllerInput_ClientToServer : pb::IMessage<CUserMsg_TrackedControllerInput_ClientToServer> {
    private static readonly pb::MessageParser<CUserMsg_TrackedControllerInput_ClientToServer> _parser = new pb::MessageParser<CUserMsg_TrackedControllerInput_ClientToServer>(() => new CUserMsg_TrackedControllerInput_ClientToServer());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CUserMsg_TrackedControllerInput_ClientToServer> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.Dota.S2UsermessagesReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CUserMsg_TrackedControllerInput_ClientToServer() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CUserMsg_TrackedControllerInput_ClientToServer(CUserMsg_TrackedControllerInput_ClientToServer other) : this() {
      data_ = other.data_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CUserMsg_TrackedControllerInput_ClientToServer Clone() {
      return new CUserMsg_TrackedControllerInput_ClientToServer(this);
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 1;
    private pb::ByteString data_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Data {
      get { return data_; }
      set {
        data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CUserMsg_TrackedControllerInput_ClientToServer);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CUserMsg_TrackedControllerInput_ClientToServer other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data != other.Data) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data.Length != 0) hash ^= Data.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Data);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Data);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CUserMsg_TrackedControllerInput_ClientToServer other) {
      if (other == null) {
        return;
      }
      if (other.Data.Length != 0) {
        Data = other.Data;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Data = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
