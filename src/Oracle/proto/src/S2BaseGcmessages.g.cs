// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: s2_base_gcmessages.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Proto.Dota {

  /// <summary>Holder for reflection information generated from s2_base_gcmessages.proto</summary>
  public static partial class S2BaseGcmessagesReflection {

    #region Descriptor
    /// <summary>File descriptor for s2_base_gcmessages.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static S2BaseGcmessagesReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChhzMl9iYXNlX2djbWVzc2FnZXMucHJvdG8SD2dvb2dsZS5wcm90b2J1ZiJN",
            "ChRDU09FY29uSXRlbUF0dHJpYnV0ZRIRCglkZWZfaW5kZXgYASABKA0SDQoF",
            "dmFsdWUYAiABKA0SEwoLdmFsdWVfYnl0ZXMYAyABKAwiOgoTQ1NPRWNvbkl0",
            "ZW1FcXVpcHBlZBIRCgluZXdfY2xhc3MYASABKA0SEAoIbmV3X3Nsb3QYAiAB",
            "KA0ihQMKC0NTT0Vjb25JdGVtEgoKAmlkGAEgASgEEhIKCmFjY291bnRfaWQY",
            "AiABKA0SEQoJaW52ZW50b3J5GAMgASgNEhEKCWRlZl9pbmRleBgEIAEoDRIQ",
            "CghxdWFudGl0eRgFIAEoDRINCgVsZXZlbBgGIAEoDRIPCgdxdWFsaXR5GAcg",
            "ASgNEg0KBWZsYWdzGAggASgNEg4KBm9yaWdpbhgJIAEoDRI4CglhdHRyaWJ1",
            "dGUYDCADKAsyJS5nb29nbGUucHJvdG9idWYuQ1NPRWNvbkl0ZW1BdHRyaWJ1",
            "dGUSMwoNaW50ZXJpb3JfaXRlbRgNIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5D",
            "U09FY29uSXRlbRIOCgZpbl91c2UYDiABKAgSDQoFc3R5bGUYDyABKA0SEwoL",
            "b3JpZ2luYWxfaWQYECABKAQSPAoOZXF1aXBwZWRfc3RhdGUYEiADKAsyJC5n",
            "b29nbGUucHJvdG9idWYuQ1NPRWNvbkl0ZW1FcXVpcHBlZEISSAGAAQCqAgpQ",
            "cm90by5Eb3RhYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.Dota.CSOEconItemAttribute), global::Proto.Dota.CSOEconItemAttribute.Parser, new[]{ "DefIndex", "Value", "ValueBytes" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.Dota.CSOEconItemEquipped), global::Proto.Dota.CSOEconItemEquipped.Parser, new[]{ "NewClass", "NewSlot" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.Dota.CSOEconItem), global::Proto.Dota.CSOEconItem.Parser, new[]{ "Id", "AccountId", "Inventory", "DefIndex", "Quantity", "Level", "Quality", "Flags", "Origin", "Attribute", "InteriorItem", "InUse", "Style", "OriginalId", "EquippedState" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class CSOEconItemAttribute : pb::IMessage<CSOEconItemAttribute> {
    private static readonly pb::MessageParser<CSOEconItemAttribute> _parser = new pb::MessageParser<CSOEconItemAttribute>(() => new CSOEconItemAttribute());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSOEconItemAttribute> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.Dota.S2BaseGcmessagesReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSOEconItemAttribute() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSOEconItemAttribute(CSOEconItemAttribute other) : this() {
      defIndex_ = other.defIndex_;
      value_ = other.value_;
      valueBytes_ = other.valueBytes_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSOEconItemAttribute Clone() {
      return new CSOEconItemAttribute(this);
    }

    /// <summary>Field number for the "def_index" field.</summary>
    public const int DefIndexFieldNumber = 1;
    private uint defIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint DefIndex {
      get { return defIndex_; }
      set {
        defIndex_ = value;
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 2;
    private uint value_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Value {
      get { return value_; }
      set {
        value_ = value;
      }
    }

    /// <summary>Field number for the "value_bytes" field.</summary>
    public const int ValueBytesFieldNumber = 3;
    private pb::ByteString valueBytes_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString ValueBytes {
      get { return valueBytes_; }
      set {
        valueBytes_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSOEconItemAttribute);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSOEconItemAttribute other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DefIndex != other.DefIndex) return false;
      if (Value != other.Value) return false;
      if (ValueBytes != other.ValueBytes) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (DefIndex != 0) hash ^= DefIndex.GetHashCode();
      if (Value != 0) hash ^= Value.GetHashCode();
      if (ValueBytes.Length != 0) hash ^= ValueBytes.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (DefIndex != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(DefIndex);
      }
      if (Value != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Value);
      }
      if (ValueBytes.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(ValueBytes);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (DefIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DefIndex);
      }
      if (Value != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Value);
      }
      if (ValueBytes.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(ValueBytes);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSOEconItemAttribute other) {
      if (other == null) {
        return;
      }
      if (other.DefIndex != 0) {
        DefIndex = other.DefIndex;
      }
      if (other.Value != 0) {
        Value = other.Value;
      }
      if (other.ValueBytes.Length != 0) {
        ValueBytes = other.ValueBytes;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            DefIndex = input.ReadUInt32();
            break;
          }
          case 16: {
            Value = input.ReadUInt32();
            break;
          }
          case 26: {
            ValueBytes = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CSOEconItemEquipped : pb::IMessage<CSOEconItemEquipped> {
    private static readonly pb::MessageParser<CSOEconItemEquipped> _parser = new pb::MessageParser<CSOEconItemEquipped>(() => new CSOEconItemEquipped());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSOEconItemEquipped> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.Dota.S2BaseGcmessagesReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSOEconItemEquipped() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSOEconItemEquipped(CSOEconItemEquipped other) : this() {
      newClass_ = other.newClass_;
      newSlot_ = other.newSlot_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSOEconItemEquipped Clone() {
      return new CSOEconItemEquipped(this);
    }

    /// <summary>Field number for the "new_class" field.</summary>
    public const int NewClassFieldNumber = 1;
    private uint newClass_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint NewClass {
      get { return newClass_; }
      set {
        newClass_ = value;
      }
    }

    /// <summary>Field number for the "new_slot" field.</summary>
    public const int NewSlotFieldNumber = 2;
    private uint newSlot_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint NewSlot {
      get { return newSlot_; }
      set {
        newSlot_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSOEconItemEquipped);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSOEconItemEquipped other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NewClass != other.NewClass) return false;
      if (NewSlot != other.NewSlot) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (NewClass != 0) hash ^= NewClass.GetHashCode();
      if (NewSlot != 0) hash ^= NewSlot.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (NewClass != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(NewClass);
      }
      if (NewSlot != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(NewSlot);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (NewClass != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(NewClass);
      }
      if (NewSlot != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(NewSlot);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSOEconItemEquipped other) {
      if (other == null) {
        return;
      }
      if (other.NewClass != 0) {
        NewClass = other.NewClass;
      }
      if (other.NewSlot != 0) {
        NewSlot = other.NewSlot;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            NewClass = input.ReadUInt32();
            break;
          }
          case 16: {
            NewSlot = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CSOEconItem : pb::IMessage<CSOEconItem> {
    private static readonly pb::MessageParser<CSOEconItem> _parser = new pb::MessageParser<CSOEconItem>(() => new CSOEconItem());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSOEconItem> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.Dota.S2BaseGcmessagesReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSOEconItem() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSOEconItem(CSOEconItem other) : this() {
      id_ = other.id_;
      accountId_ = other.accountId_;
      inventory_ = other.inventory_;
      defIndex_ = other.defIndex_;
      quantity_ = other.quantity_;
      level_ = other.level_;
      quality_ = other.quality_;
      flags_ = other.flags_;
      origin_ = other.origin_;
      attribute_ = other.attribute_.Clone();
      interiorItem_ = other.interiorItem_ != null ? other.interiorItem_.Clone() : null;
      inUse_ = other.inUse_;
      style_ = other.style_;
      originalId_ = other.originalId_;
      equippedState_ = other.equippedState_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSOEconItem Clone() {
      return new CSOEconItem(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private ulong id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "account_id" field.</summary>
    public const int AccountIdFieldNumber = 2;
    private uint accountId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint AccountId {
      get { return accountId_; }
      set {
        accountId_ = value;
      }
    }

    /// <summary>Field number for the "inventory" field.</summary>
    public const int InventoryFieldNumber = 3;
    private uint inventory_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Inventory {
      get { return inventory_; }
      set {
        inventory_ = value;
      }
    }

    /// <summary>Field number for the "def_index" field.</summary>
    public const int DefIndexFieldNumber = 4;
    private uint defIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint DefIndex {
      get { return defIndex_; }
      set {
        defIndex_ = value;
      }
    }

    /// <summary>Field number for the "quantity" field.</summary>
    public const int QuantityFieldNumber = 5;
    private uint quantity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Quantity {
      get { return quantity_; }
      set {
        quantity_ = value;
      }
    }

    /// <summary>Field number for the "level" field.</summary>
    public const int LevelFieldNumber = 6;
    private uint level_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Level {
      get { return level_; }
      set {
        level_ = value;
      }
    }

    /// <summary>Field number for the "quality" field.</summary>
    public const int QualityFieldNumber = 7;
    private uint quality_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Quality {
      get { return quality_; }
      set {
        quality_ = value;
      }
    }

    /// <summary>Field number for the "flags" field.</summary>
    public const int FlagsFieldNumber = 8;
    private uint flags_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Flags {
      get { return flags_; }
      set {
        flags_ = value;
      }
    }

    /// <summary>Field number for the "origin" field.</summary>
    public const int OriginFieldNumber = 9;
    private uint origin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Origin {
      get { return origin_; }
      set {
        origin_ = value;
      }
    }

    /// <summary>Field number for the "attribute" field.</summary>
    public const int AttributeFieldNumber = 12;
    private static readonly pb::FieldCodec<global::Proto.Dota.CSOEconItemAttribute> _repeated_attribute_codec
        = pb::FieldCodec.ForMessage(98, global::Proto.Dota.CSOEconItemAttribute.Parser);
    private readonly pbc::RepeatedField<global::Proto.Dota.CSOEconItemAttribute> attribute_ = new pbc::RepeatedField<global::Proto.Dota.CSOEconItemAttribute>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Proto.Dota.CSOEconItemAttribute> Attribute {
      get { return attribute_; }
    }

    /// <summary>Field number for the "interior_item" field.</summary>
    public const int InteriorItemFieldNumber = 13;
    private global::Proto.Dota.CSOEconItem interiorItem_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Proto.Dota.CSOEconItem InteriorItem {
      get { return interiorItem_; }
      set {
        interiorItem_ = value;
      }
    }

    /// <summary>Field number for the "in_use" field.</summary>
    public const int InUseFieldNumber = 14;
    private bool inUse_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool InUse {
      get { return inUse_; }
      set {
        inUse_ = value;
      }
    }

    /// <summary>Field number for the "style" field.</summary>
    public const int StyleFieldNumber = 15;
    private uint style_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Style {
      get { return style_; }
      set {
        style_ = value;
      }
    }

    /// <summary>Field number for the "original_id" field.</summary>
    public const int OriginalIdFieldNumber = 16;
    private ulong originalId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong OriginalId {
      get { return originalId_; }
      set {
        originalId_ = value;
      }
    }

    /// <summary>Field number for the "equipped_state" field.</summary>
    public const int EquippedStateFieldNumber = 18;
    private static readonly pb::FieldCodec<global::Proto.Dota.CSOEconItemEquipped> _repeated_equippedState_codec
        = pb::FieldCodec.ForMessage(146, global::Proto.Dota.CSOEconItemEquipped.Parser);
    private readonly pbc::RepeatedField<global::Proto.Dota.CSOEconItemEquipped> equippedState_ = new pbc::RepeatedField<global::Proto.Dota.CSOEconItemEquipped>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Proto.Dota.CSOEconItemEquipped> EquippedState {
      get { return equippedState_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSOEconItem);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSOEconItem other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (AccountId != other.AccountId) return false;
      if (Inventory != other.Inventory) return false;
      if (DefIndex != other.DefIndex) return false;
      if (Quantity != other.Quantity) return false;
      if (Level != other.Level) return false;
      if (Quality != other.Quality) return false;
      if (Flags != other.Flags) return false;
      if (Origin != other.Origin) return false;
      if(!attribute_.Equals(other.attribute_)) return false;
      if (!object.Equals(InteriorItem, other.InteriorItem)) return false;
      if (InUse != other.InUse) return false;
      if (Style != other.Style) return false;
      if (OriginalId != other.OriginalId) return false;
      if(!equippedState_.Equals(other.equippedState_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0UL) hash ^= Id.GetHashCode();
      if (AccountId != 0) hash ^= AccountId.GetHashCode();
      if (Inventory != 0) hash ^= Inventory.GetHashCode();
      if (DefIndex != 0) hash ^= DefIndex.GetHashCode();
      if (Quantity != 0) hash ^= Quantity.GetHashCode();
      if (Level != 0) hash ^= Level.GetHashCode();
      if (Quality != 0) hash ^= Quality.GetHashCode();
      if (Flags != 0) hash ^= Flags.GetHashCode();
      if (Origin != 0) hash ^= Origin.GetHashCode();
      hash ^= attribute_.GetHashCode();
      if (interiorItem_ != null) hash ^= InteriorItem.GetHashCode();
      if (InUse != false) hash ^= InUse.GetHashCode();
      if (Style != 0) hash ^= Style.GetHashCode();
      if (OriginalId != 0UL) hash ^= OriginalId.GetHashCode();
      hash ^= equippedState_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(Id);
      }
      if (AccountId != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(AccountId);
      }
      if (Inventory != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Inventory);
      }
      if (DefIndex != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(DefIndex);
      }
      if (Quantity != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(Quantity);
      }
      if (Level != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(Level);
      }
      if (Quality != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(Quality);
      }
      if (Flags != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(Flags);
      }
      if (Origin != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(Origin);
      }
      attribute_.WriteTo(output, _repeated_attribute_codec);
      if (interiorItem_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(InteriorItem);
      }
      if (InUse != false) {
        output.WriteRawTag(112);
        output.WriteBool(InUse);
      }
      if (Style != 0) {
        output.WriteRawTag(120);
        output.WriteUInt32(Style);
      }
      if (OriginalId != 0UL) {
        output.WriteRawTag(128, 1);
        output.WriteUInt64(OriginalId);
      }
      equippedState_.WriteTo(output, _repeated_equippedState_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Id);
      }
      if (AccountId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AccountId);
      }
      if (Inventory != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Inventory);
      }
      if (DefIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DefIndex);
      }
      if (Quantity != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Quantity);
      }
      if (Level != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Level);
      }
      if (Quality != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Quality);
      }
      if (Flags != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Flags);
      }
      if (Origin != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Origin);
      }
      size += attribute_.CalculateSize(_repeated_attribute_codec);
      if (interiorItem_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(InteriorItem);
      }
      if (InUse != false) {
        size += 1 + 1;
      }
      if (Style != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Style);
      }
      if (OriginalId != 0UL) {
        size += 2 + pb::CodedOutputStream.ComputeUInt64Size(OriginalId);
      }
      size += equippedState_.CalculateSize(_repeated_equippedState_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSOEconItem other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0UL) {
        Id = other.Id;
      }
      if (other.AccountId != 0) {
        AccountId = other.AccountId;
      }
      if (other.Inventory != 0) {
        Inventory = other.Inventory;
      }
      if (other.DefIndex != 0) {
        DefIndex = other.DefIndex;
      }
      if (other.Quantity != 0) {
        Quantity = other.Quantity;
      }
      if (other.Level != 0) {
        Level = other.Level;
      }
      if (other.Quality != 0) {
        Quality = other.Quality;
      }
      if (other.Flags != 0) {
        Flags = other.Flags;
      }
      if (other.Origin != 0) {
        Origin = other.Origin;
      }
      attribute_.Add(other.attribute_);
      if (other.interiorItem_ != null) {
        if (interiorItem_ == null) {
          interiorItem_ = new global::Proto.Dota.CSOEconItem();
        }
        InteriorItem.MergeFrom(other.InteriorItem);
      }
      if (other.InUse != false) {
        InUse = other.InUse;
      }
      if (other.Style != 0) {
        Style = other.Style;
      }
      if (other.OriginalId != 0UL) {
        OriginalId = other.OriginalId;
      }
      equippedState_.Add(other.equippedState_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt64();
            break;
          }
          case 16: {
            AccountId = input.ReadUInt32();
            break;
          }
          case 24: {
            Inventory = input.ReadUInt32();
            break;
          }
          case 32: {
            DefIndex = input.ReadUInt32();
            break;
          }
          case 40: {
            Quantity = input.ReadUInt32();
            break;
          }
          case 48: {
            Level = input.ReadUInt32();
            break;
          }
          case 56: {
            Quality = input.ReadUInt32();
            break;
          }
          case 64: {
            Flags = input.ReadUInt32();
            break;
          }
          case 72: {
            Origin = input.ReadUInt32();
            break;
          }
          case 98: {
            attribute_.AddEntriesFrom(input, _repeated_attribute_codec);
            break;
          }
          case 106: {
            if (interiorItem_ == null) {
              interiorItem_ = new global::Proto.Dota.CSOEconItem();
            }
            input.ReadMessage(interiorItem_);
            break;
          }
          case 112: {
            InUse = input.ReadBool();
            break;
          }
          case 120: {
            Style = input.ReadUInt32();
            break;
          }
          case 128: {
            OriginalId = input.ReadUInt64();
            break;
          }
          case 146: {
            equippedState_.AddEntriesFrom(input, _repeated_equippedState_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
